{
	"info": {
		"_postman_id": "1489ee50-7e09-4c2f-a2be-ed0a6738862f",
		"name": "Platform Admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Platform Admin",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Login",
							"item": [
								{
									"name": "Valid Login with 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"",
													"",
													"if(jsonData.data.two_fa === true){",
													"    var Key = jsonData.data.key",
													"    pm.environment.set(\"KEY\", Key)",
													"    pm.collectionVariables.set(\"KEY\", Key)",
													"",
													"    pm.test(\"Status code is 200\", function(){",
													"        pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })  ",
													"    pm.test(\"Check for two fa\", function(){",
													"    pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    })",
													"}",
													"else if (jsonData.data.user.two_fa === 0){",
													"    pm.test(\"2FA is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"    })",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"TOKEN\", Token)",
													"    pm.collectionVariables.set(\"TOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"",
													"        pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    ",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"    })",
													"    pm.test(\"Email is accurate\", function(){",
													"        pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"    })",
													"}",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													"pm.environment.set('base_url', 'https://dd-api.bits.dev.onepipe.io/v1')",
													"pm.environment.set('base_url_v1', 'https://dd-api.bits.dev.onepipe.io/v1')",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4d4b9dd0-3f38-46a8-a646-21638fb2301b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"azeez@assurdly.com\",\n    \"password\": \"Password12@@@\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login Invalid Credentials",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d81b66f-375a-4e66-a503-35eacbd9d2d9",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid login credentials\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1e8acc21-61c0-4174-95e4-4cedfdd30cfd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "635d4f0d-ab51-4a29-9ae0-16dcbd83cbac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"dev@onepipe.io\",\n    \"password\": \"123456789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript",
												"id": "9497c906-622f-4520-8433-be5a221794d7"
											}
										}
									],
									"id": "057b0304-753f-457b-ab95-0ba480345e8a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Invalid Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript",
												"id": "b7497d06-276f-4433-8a1c-ff4305b05fe2"
											}
										}
									],
									"id": "08ece6ab-8173-4d68-8dfc-417654d61696",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"minnie\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4ced01e-bf3d-48da-b603-2dc12d749c54",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Password cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c7c9edb3-523c-46d4-ac03-b515c307859d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e5579130-9b93-46e6-951c-d711796d9ac0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"dev@onepipe.io\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login wihout 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67133885-8ac6-457e-a6cf-4c22ce92a409",
												"exec": [
													"var jsonData = pm.response.json();",
													"if (jsonData.data.user.two_fa === 0){",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"TOKEN\", Token)",
													"    pm.collectionVariables.set(\"TOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    }) ",
													"}",
													"else{",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is true\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"    })",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ef04fa6f-7147-4588-95f3-3d9750f88499",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e6191a89-3110-4bad-8f29-1e50e157ae62",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"azeez@assurdly.com\",\n    \"password\": \"Password12@@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								}
							],
							"id": "d99cab5c-158d-4982-a757-95528aae17cb"
						},
						{
							"name": "Login 2FA",
							"item": [
								{
									"name": "Login (2FA) - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c027cb0-0ac0-4349-b3c5-caf04ee06944",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"// var Token = jsonData.data.token_data.token\r",
													"// pm.environment.set(\"TOKEN\", Token)\r",
													"// pm.collectionVariables.set(\"TOKEN\", Token)\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is Success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is successs\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"success\")\r",
													"// })  \r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "981950e5-c493-4e77-9ba0-83d7fd0c0e9e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8a94ce8d-f783-477c-b9b2-036112e94f34",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Valid (For Approval)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de1c85cf-50d5-4ca8-a565-02a7052c260e",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"// var Token = jsonData.data.token_data.token\r",
													"// pm.environment.set(\"TOKEN1\", Token)\r",
													"// pm.collectionVariables.set(\"TOKEN1\", Token)\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is Success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is successs\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"success\")\r",
													"// })  \r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "647e2119-032a-4439-81ac-49ff5fecb334",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "29ffa150-e847-4d2e-9c2e-c7689e3ae7a2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{KEY1}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb002b2b-4202-4484-827f-9754e74299f6",
												"exec": [
													"// var jsonData = pm.response.json()\r",
													"\r",
													"// pm.test(\"Status code is 400\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"// pm.test(\"Status is displayed as Error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"Invalid 2FA Token\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4182cd77-9fa0-48df-bb48-5c9b4f43d593",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"636964\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"token should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "419bd9de-0135-4a64-aecc-0bd6730b8df5"
											}
										}
									],
									"id": "42f83262-c80e-4564-9997-14ff7b49c1e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"key should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "d5c59a04-15cc-4f1b-9155-3ffed7b9e55e"
											}
										}
									],
									"id": "57d3e675-b3b9-4fe9-bbcc-2cea867281f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"\",\n    \"token\": \"123454\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3550d6ab-cd0e-45ba-abb0-402eb10d8619",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Key\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Key\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ff52000b-2277-42de-b2f7-18a2078a991e",
												"exec": [
													"// postman.setNextRequest(\"Create Role\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8ccb578e-35d8-4aaf-8a27-1dd9493a3861",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE2ODE4MTkyOTgsImV4cCI6MTY4MTgyMjg5OH0.24icAcu_5IA5Q_ZaDD6YziIdVYZ4vg\",\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								}
							],
							"id": "17dc0d75-a9ae-43f4-94a4-621a14c0c137"
						}
					],
					"id": "77a7e359-1f05-4aa8-94e1-581f3cf9222a"
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Fetch Roles",
							"item": [
								{
									"name": "Fetch Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5297646f-c04f-4725-a7c3-75389b780301",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a38f5a21-9f7e-417f-acb9-b6b232b6dd5f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b1ee93f-76e0-4f03-8331-e4b265d982b6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "inactive",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "461bfe4d-cad4-449b-bea7-f5f51c5637b5",
											"name": "Fetch Roles",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "633"
												},
												{
													"key": "ETag",
													"value": "W/\"279-KO0JgYx63xRZJcd9OsLykVv98x4\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 07:08:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T07:00:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T07:00:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 1,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T06:47:54.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T06:47:54.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										},
										{
											"id": "59f6b02d-c800-486f-a31f-6fe879402992",
											"name": "Fetch Roles (Active)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=active",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "DESC"
														},
														{
															"key": "status",
															"value": "active"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "15768"
												},
												{
													"key": "ETag",
													"value": "W/\"3d98-QraPIS0OewPMi8aG2WiTggjPx5s\""
												},
												{
													"key": "Date",
													"value": "Mon, 08 May 2023 09:42:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 46,\n                \"name\": \"Inverstors\",\n                \"description\": \"Demo\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-07T08:54:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T08:54:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 45,\n                \"name\": \"TestRoleBE4\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T15:35:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T15:35:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 44,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T10:15:35.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T10:15:35.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 35,\n                \"name\": \"TestRoleBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T12:25:29.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T12:25:29.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 34,\n                \"name\": \"Another one\",\n                \"description\": \"Dj khaled\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T11:23:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T11:23:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    }\n                ]\n            },\n            {\n                \"id\": 33,\n                \"name\": \"TestFromFE3\",\n                \"description\": \"TestFromFE3\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:23:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T14:39:34.000Z\",\n                \"modified_by\": 8,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 32,\n                \"name\": \"TestFromBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:14:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:14:51.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 31,\n                \"name\": \"TestFromBE2\",\n                \"description\": \"TestFromBE2\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:01:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:01:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 30,\n                \"name\": \"Test Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:05:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:05:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 29,\n                \"name\": \"ccvhbbbn vhcnncc\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:04:45.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:04:45.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 35,\n            \"page\": \"1\",\n            \"pages\": 4,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										},
										{
											"id": "0e69354f-b476-4f28-9001-775f9bcc975b",
											"name": "Fetch Roles (Inactive)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=inactive",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "DESC"
														},
														{
															"key": "status",
															"value": "inactive"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1071"
												},
												{
													"key": "ETag",
													"value": "W/\"42f-VZeJR4rs+neVJgSZD9sx0Y5CcaQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 08 May 2023 09:43:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 26,\n                \"name\": \"UpdatedRoleName\",\n                \"description\": \"UpdatedRoleName\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-05-02T14:34:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:51:58.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 13,\n                \"name\": \"Super Admin1\",\n                \"description\": \"Super Admgin\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-29T14:16:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T11:36:12.000Z\",\n                \"modified_by\": 28,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 10,\n                \"name\": \"TestRoleNew\",\n                \"description\": \"TestRole\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-27T22:35:47.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-28T03:51:31.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "fbf5d595-38c6-4f74-a3e2-18e75cc64ac5"
						},
						{
							"name": "Fetch Roles with ID",
							"item": [
								{
									"name": "Fetch Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3472c5a-0994-469a-9c94-ed688059ec79",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e739fb17-3334-40c9-9a75-4bb715115aab",
												"exec": [
													"//console.log(pm.request.url.variables)\r",
													"//console.log(pm.request.url.variables.value)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c9fc8818-944b-47c5-a02d-6330af984016",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "role_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Role - Invalid Role_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b658781-9cea-41cc-8f65-9fcb5d6051fc",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d1d18659-04d4-4765-b0f0-c78753c21516",
												"exec": [
													"//console.log(pm.request.url.variables)\r",
													"//console.log(pm.request.url.variables.value)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "72f06e94-4849-4ba1-a3cd-b00b957fbea2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "6eb45cfb-aa5f-444d-8377-6f5da5ee2462",
													"key": "role_id",
													"value": "ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Roles - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ff223af-0c2a-47dd-ad68-268dbf8676b1",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9496d29a-3937-4e26-8320-35cc8df717e9",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e91731a3-3d88-47df-bf1f-b6a76ffd79bf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Roles - Invalid or Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bff8f291-860f-4339-b948-a1ec1491b220",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is invalid signature\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3f72ea2-22e2-4d3f-b4e3-1ad52f6e331b",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "59a14e5f-9f84-4824-ad86-7a2648a7abfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ5MjMxLCJleHAiOjE2ODM2NTI4MzF9.Wk77pTneq8D0YIP9qY5r7T8TSKkOtTF8aL4moDd-F3Q",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "2822255b-76c2-451b-9ed9-890688628356"
						},
						{
							"name": "Get Permissions",
							"item": [
								{
									"name": "Fetch Permissions - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "133dc355-c940-49f0-92d7-6ce18505c761",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"\r",
													"    \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b2c2657a-464b-4b5d-b74d-5cfd0cd4310c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4d31f881-0b96-4963-9376-ab4637902ff7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								},
								{
									"name": "Fetch Permissions - Invalid/ Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b31a14b6-9e69-49c5-862d-f781b7a105d7",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2bfa4e4b-b7ae-40c5-83fb-06a510f68b49",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e98ac1c5-7e79-4598-98c5-8cd8251910d9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								},
								{
									"name": "Fetch Permissions - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6068f14f-327e-4c69-9c76-6923442b1405",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aef700b5-553f-408a-80c0-8a57d347d8cc",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7d9934ce-1d27-473a-a858-887f433411c6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								}
							],
							"id": "90cdd0c2-af08-44e9-8b05-3955a814c36f"
						},
						{
							"name": "Fetch Role Stats",
							"item": [
								{
									"name": "Fetch Role Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7237f11-8c32-4b86-9942-32b9d195fd6d",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data[0].status).to.contain(\"active\")\r",
													"})\r",
													"pm.test(\"Validate the inactive status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data[1].status).to.contain(\"inactive\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d81dc585-6df4-4d82-9cc0-8fa8ce8835f3",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f5a81d0b-5fbb-43ad-b655-31403c49f562",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "72d96700-39da-496a-9d0b-0188e5fcb270",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Role Stats - Expired Tken",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a575d1b-2dc2-436b-b2d4-8a76ff8ab84a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4d4cefd9-57ec-4999-b2db-a8c03db16b02",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "195139a4-1aca-47db-9c15-085eaf97bc99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "bf2c89e7-bc6e-41f2-85f8-db26be08f38e",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Role Stats - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a8ab8c80-ecb5-434d-b63d-4485d9ac0cda",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9f06972b-6b26-4183-ae73-a2861b3ef2ad",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "52ba1ffe-0c88-4166-a2e1-3ed7740fde8c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "0285dd56-3cee-46e3-82a2-a8510c30ac99",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "d1b3abe9-630f-4927-ae82-7e82148e0423"
						},
						{
							"name": "Create Role",
							"item": [
								{
									"name": "Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2570f15-2942-44e6-bbe2-c4802b92e714",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"const role = jsonData.data.id\r",
													"pm.environment.set(\"roleId\", role)\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"\r",
													"pm.test(\"Statu is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Error message should be 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role created successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9257463f-cd93-471e-88d0-9da28d37bc15",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "30466f58-c2d9-4570-8ddb-325d104d68c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								}
							],
							"id": "678f85d6-6a03-4e63-a327-5dba2f860363"
						},
						{
							"name": "Deactivate Role",
							"item": [
								{
									"name": "Deactivate Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eaca73ed-fff9-4e6c-b6c3-ab062a688a36",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Statu is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Error message should be 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "30097c5d-9dba-43c7-bb91-4f96373f0b26",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "666872ce-ffd4-4bb8-aa0c-076c108dc62c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{roleId}}"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "ec5bc4a3-10dd-42a1-bfac-5a3068594dd2"
						},
						{
							"name": "Activate Role",
							"item": [
								{
									"name": "Activate Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2caf89c-e053-415b-97ce-d556bf0090b8",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Statu is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Error message should be 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c1dd8c10-9b6d-4305-81fa-3205870fcbce",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "dadadb74-2b86-43d2-b439-231ffb1bf13e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{roleId}}"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "cf871a86-f34f-45f7-be99-1120fb197571"
						},
						{
							"name": "Update Role",
							"item": [
								{
									"name": "Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22916151-4215-41d0-bdc6-3a606e931df3",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Statu is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Error message should be 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "76b3b84c-ee31-47fc-a95d-45eb710f03e2",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d43117d8-3b50-4f03-bdba-dbe12aa09fce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"permissions\": [\"add_users\", \"view_users\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"key": "role_id",
													"value": "{{roleId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "9c7afe3c-9eae-4df8-ad7d-f6e6863bf20e"
						}
					],
					"id": "6b1c6178-c808-4c7d-99a2-685a90721021"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Fetch User (Me)",
							"item": [
								{
									"name": "Fetch User (Me)",
									"id": "ad569261-afec-4c98-91fe-99b6341d0857",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "216adaea-a14a-42d1-a171-421dca3c9558",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76cb529c-697e-4c62-ba69-95272782c1b6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "61224640-c68c-48d4-84c0-9ac9c3c5a099",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "10a74366-c7c8-48d6-ada3-919878b762e4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "a48b0f0b-3b49-48d3-9eaf-47dfa6203b23",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be05206c-4abc-4098-876d-57eba693ee0c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "eca14d26-9dff-47a3-a4fd-2cbf26db7c53",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4e51343a-63f9-4ecf-a506-ad98cee81703",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "552789a9-af91-4669-a3d0-be2ed5d3784a",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "229c65c8-8139-40ed-9e5a-bab28bbbb44e"
						},
						{
							"name": "Fetch Audit Trails (Me)",
							"item": [
								{
									"name": "Fetch Audit Trails (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "867de176-9f8b-4d64-96aa-9fd5f3b313e4",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f08cb92c-9479-4aba-b7cf-b8f4a407d26f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5a4722e0-e269-455d-b227-2f5289145222",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "21a2cff1-d7a5-4629-b263-7008d5b24fe1",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "80e7bd55-09df-4049-a964-2185931c055a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "252be19b-74fc-4d41-839d-4f09851f81ea",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e8133cd0-6883-482f-9185-6ae6b97179ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "c8a6dd4b-45b3-4817-9f85-0846f06bd60a",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7c53584-f409-40c6-9400-73dcf50aa55c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95f8ca21-56e5-48c1-a04c-c76210e09620",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "fc4c672a-b54f-4fc8-a287-68cbf41235c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "6e386f16-5d7b-4181-849c-4d5e22b4e3bf",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "b9ed9cc0-fbb6-42d3-abb6-f4d3b8a55016"
						},
						{
							"name": "Update User (Me)",
							"item": [
								{
									"name": "Update User (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1763d65-d145-4537-bb8f-b96bb3ed8e14",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9bd79730-57ff-439b-8ffd-357a2ac1f839",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a4fd4778-fbfd-4cbd-ab15-84a2bc5feac1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"Azeez\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "ddf537b2-7016-4297-87c3-a11c8f22975f",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c64a617-ca7c-4a7f-8bf0-ff15a476d025",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ced57bc8-6fa3-4475-af15-4139e6f284ba",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c575d64c-0320-4e27-a71d-f6394a73b127",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \" \",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "5a1a4434-a177-4663-bc4f-f6cac286e422",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "534cc772-36f0-40bc-b788-d0ccba23cd85",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deecb0b1-4064-4cfb-a140-aecbb8c097a0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ca772093-e990-4343-8d8b-4771478d1cd4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\",\n    \"last_name\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "bb450f93-7035-4bdb-a7da-28ad959c84f4",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8fe124d6-f98e-48cb-89a0-10818000e182",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the last name is returned\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2457373b-0a20-407b-a53a-79efb203fcf1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "57ac8f30-fa48-444d-a80d-edf3ae173c3e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "0ad24cd9-4601-4763-adb6-b41dfeea8fcb",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc215605-4d3c-4847-adf2-8ff607dd2247",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the last name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name is returned\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26fcbac3-7b9d-458b-a444-13b923eb1ee0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8aa36197-3507-4c6b-8593-f00f04a39edb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"last_name\": \"Pascal2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "a04d8b31-576c-4922-8439-2457e04fe1ba",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce72363c-fc1b-42c7-a8af-f16a9b57f6f8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c45455f9-2462-44a5-ab92-bc0c61aef33d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8af247b7-566b-4a12-b7ae-3d1ab24e0a55",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "0d71d20f-9dc3-417a-b3aa-257a9cee7c7a",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eda6d0e9-6491-42bd-94b8-4a6dbc8b8f47",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6c49559b-9089-487f-9e79-cc5a9eae3fd9",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a0891977-4d6f-404f-b76f-bd16b200257d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "325dbb4c-438c-41ab-aa9a-f3581e104764",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "ebd424cb-d9d9-4ddd-8923-b5bb5b4af3aa"
						},
						{
							"name": "Setup User's 2FA (Me)",
							"item": [
								{
									"name": "Setup User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2546d8e4-34ce-424c-a951-bc58d28c05c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"\r",
													"pm.test(\"Validate the backup codes are returned\", function(){\r",
													"    pm.expect(jsonData.data.backup_codes).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2c97e6b5-e37e-40fa-b52b-3c5a2b329aab",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b9a01d84-179c-435f-a50a-295ae025315d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd8a04d-1c2f-495e-8c80-dfbd2bf68294",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c5478cd1-90ee-46bd-a438-3eb37dcd001a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e1ee3b4d-2e52-4d71-9bd8-5934231864c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) -Invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68b54c5c-cdfa-41fa-8ace-6dafe973f74c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fedad155-b91a-41e3-946f-d19a47ef297e",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b66ae95d-27a6-41e3-b046-b1b973a654ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								}
							],
							"id": "f5288e73-7422-43bb-ae4b-1535112c9be9"
						},
						{
							"name": "Activate/Deactivate User's 2FA (Me)",
							"item": [
								{
									"name": "Deactivate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c571015f-c9e4-4a8c-9a43-74b7be82a2d1",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea5fde35-d673-4bb8-9dce-d492cfc30ef6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9ddecf91-caa9-486b-bb05-6b1b2b9e142f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "453edcae-1672-4136-9069-c6e890d12db0",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": [
										{
											"id": "b43ba97f-fb22-4aa0-aded-24fb67f617b6",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be99fea4-da4f-4c36-8026-87840d047ca7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4ec26e6c-1c70-4f4b-89dd-2c492d56d1ab",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c08ecf3c-267c-4d8c-9b2e-61d6e98b07c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "2221e096-e938-4fc5-98e2-c27bbfedaf4a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "c254e414-fa87-4308-9dbe-6db6d67547e1",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Invalid or Expired Auth - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49bfcbce-331b-476b-8946-f07d6427a2cf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d6945e7b-3d9c-45bb-8740-9b5bc2414b21",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f055b86f-d2ba-4223-9106-9756b2fc3663",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODQxNTEzLCJleHAiOjE2ODQ4NDUxMTN9.vXVMgfX2eoHvKvldVkICU_DbhqDaNhUx0k3bCaxN-fQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "442b49a9-6f64-43eb-8ec4-06ba8c2baa2a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "25991dd7-0dd4-4b00-a439-be4b4211d27f",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "No Auth - Activate/Deactivate User's 2FA (Me) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2d99a24-69f8-4b9a-ac35-91dba0728b58",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c6b625d2-6df6-4a9d-bbdd-dc7ea47671ff",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4f01ef95-4a66-491f-98fa-762687317ef6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "6bc22444-84f7-4f9a-a0aa-9f698ce7b2af",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "fce59b01-c431-4eb3-a790-9b577f419c6c",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								}
							],
							"id": "d9b94acc-c3cc-460a-93e5-56df6f5d1fcb"
						},
						{
							"name": "Create User",
							"item": [
								{
									"name": "Create User - Valid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3c3c1273-6ef8-40d4-84fe-dde12b6e29fe",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "af927ba2-c376-4240-940c-00d6d4cb46b1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.environment.set(\"UserID\", jsonData.data.id)\r",
													"pm.environment.set(\"userEmail\", jsonData.data.email)\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e73b0bc0-1e1e-40bc-8711-032a8fa6217e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"role_id\": {{roleId}},\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty email",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "517e76c2-e5ce-4450-9771-3721c5d23417"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "09841664-17d6-4b3c-8df2-a87d7de3512a"
											}
										}
									],
									"id": "1e0754b8-0027-4951-a340-dd1d7abccc52",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty Role Id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "dc8c9523-9da5-493d-9c26-3765cf17d835"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8e444341-de45-4740-971e-faa4ce5c38a1"
											}
										}
									],
									"id": "2e2ff430-b71c-43da-b236-178458bf5614",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": \"\",\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "69fbf2d9-05af-4fd6-8590-093c9d08e4a6",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ea6238b3-7f7f-4260-9dab-b0d1b51b1fd3",
												"exec": [
													"// var jsonData = JSON.parse(responseBody);\r",
													"// var Request = JSON.parse(pm.request.body.raw);\r",
													"\r",
													"// pm.test(\"Status code is 401\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status is error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"message is '2fa is required to perform the operation'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "042f5a74-742d-4a3b-98e7-f243552582ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}{{$randomFirstName}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": null\n\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Invalid 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4ef23212-f8bf-4d44-b5b7-d7cfeddd1974",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7f4e78df-1028-426a-9a4c-8219a9cae8ad",
												"exec": [
													"// var jsonData = JSON.parse(responseBody);\r",
													"// var Request = JSON.parse(pm.request.body.raw);\r",
													"\r",
													"// pm.test(\"Status code is 401\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status is error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d75ee35e-8f4b-45fa-b3b8-b490810ac878",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"908900\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No Authorization",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "40e6efeb-4452-4fe5-bf08-4a4e6319ace1"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invite sent Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "3e3348e9-d247-4b9a-85e4-bd74c165c274"
											}
										}
									],
									"id": "ac4023cd-da32-489b-85a2-f44f19c27253",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "0543883e-f24d-48ba-a896-f99ca3cc0ccb"
						},
						{
							"name": "Get Users",
							"item": [
								{
									"name": "Get Users -  valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "453d88cd-8dc4-46bc-a967-435262c1221e"
											}
										}
									],
									"id": "17af730f-5a43-40a7-8652-98006f1332df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Users - No authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "478eec89-218b-47e4-98ea-39a4c003b9c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "091d0352-bd2f-4f86-b40d-92200de03fdd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "401e5226-aac1-413c-b6d6-1be2d3e08cfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "c35f6190-3720-499a-bc52-a1761dc1bd92"
						},
						{
							"name": "Get User",
							"item": [
								{
									"name": "Get User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce5d83d6-8033-4383-a43f-99471bd87f2a",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "106b09db-106b-4852-95cc-a5705325f87d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d881580e-0dc2-450c-9826-2901a5d26c96",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc13032e-33b4-4e81-abf9-c5547a1f7563",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'user not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2f24ea19-7f0a-4aef-98ad-0eaf3e152c63",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d28a9b55-3a98-4d59-bf8e-25bb0a77cf33",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "99c93c84-f4e0-4b31-b302-e381327d3210",
													"key": "user_id",
													"value": "aaa"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214ed5f8-9de0-4cbf-a328-96e739d8c3a6",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "609b178d-dff0-45fb-9d3f-fb03846ee53d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6ca7c3d9-a2cf-4587-9aa4-0d9514844de4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "40d82ba9-313e-4741-9490-15e257fb58b3",
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Non Existent user Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cef9983d-a8c5-410f-8082-b8f24239962f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2cd2128f-c5d1-423c-86be-f88f459dbbad",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3fd84d67-651f-4e44-adf0-175943e972e0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "e4b5ea3b-1939-42c2-b8b6-9ee059d3c520",
													"key": "user_id",
													"value": "10000"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "327a89da-edd7-4223-922c-815158341750"
						},
						{
							"name": "Update User",
							"item": [
								{
									"name": "Update user role",
									"item": [
										{
											"name": "Update user role - empty field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c63ef11-a27a-47aa-a177-d10a0b4c2e48",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "03209fc0-d735-4810-886c-264ffab1f8b7",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "cb2ab202-7d70-47c6-b2da-a83b2db2eaef",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\",\n    \"role_id\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "3ce629eb-3727-4f58-813f-0fb8a94caccf",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Non Existing Role Id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript",
														"id": "66dffa24-12d1-4d29-a724-a42ca9e996d2"
													}
												}
											],
											"id": "3da11e43-2e1e-4993-bb73-924fe06ec11f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 2000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/:user_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "8203c5ed-1aa2-4501-b00f-669e27ba2792",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2795b44-39be-434b-b1df-06e32433d8b6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is OK\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is Success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'Success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0ae5a855-bd71-4000-8eb5-1404f767029c",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "818a6d13-ac75-408f-ba69-11ff261813c8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d26c39c3-85e0-4935-ab2a-26cf9498cc57",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "cf07e4a5-bc5c-43f4-86c2-689fa51029be"
								},
								{
									"name": "Deactivate/Activate User",
									"item": [
										{
											"name": "Deactivate User - Empty user ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e45e645b-99d4-4de3-bded-e39414e73172",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'User not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "51cbfe4f-2430-4b13-8099-8b56a1e8c095",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "18397738-42a7-4370-b21e-5bb090f74288",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": ""
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d85b3471-1683-4c57-982f-f0a17fc1d666",
														"exec": [
															"// var jsonData = pm.response.json();\r",
															"\r",
															"// pm.test(\"Status code is 200\", function(){\r",
															"//     pm.response.to.have.status(200);\r",
															"// })\r",
															"// pm.test(\"Status code is Not Found\", function () {\r",
															"//     pm.response.to.have.status(\"OK\");\r",
															"// });\r",
															"\r",
															"// pm.test(\"Status is success\", function(){\r",
															"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
															"// })\r",
															"// pm.test(\"message is 'success'\", function(){\r",
															"//     pm.expect(jsonData.message).to.eql(\"success\")\r",
															"// })\r",
															"// pm.test(\"User is Inactive'\", function(){\r",
															"//     pm.expect(jsonData.data.status).to.eql(\"inactive\")\r",
															"// })\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "93d4d8ec-1d55-4570-bca4-25c0d7b37aca",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "32807065-a629-4166-8388-e02f65f85ae2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - an Inactive user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c02b0f51-75e1-462a-ac7d-3aac0a9cd215",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate an inactive user'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is inactive\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "28427c90-309e-4697-8433-a6e3984a9e10",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "1eb86b7c-e227-415c-8f5a-e0f8fa753cc6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\",\n    \"role_id\": 2\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "aec240f5-bd7f-4338-8709-f8672018b97b",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be09b528-0bd3-4231-a573-d1178dd1868f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.include(\"Cannot deactivate a user\")\r",
															"})\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "2be71808-eec2-47b3-bf62-8e74e234e8cb",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "314f0d07-fc9a-4f8b-bb0d-4566ae7e4eef",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d73ac608-512b-4f9b-bfdf-42fd98694556",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "520926f8-4ae3-4d3d-8a82-6da83fda77b7",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is pending\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5cfd8d8f-6fd1-4893-b4dc-1e5f9595700d",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "aadb795a-841c-4fe9-81b5-7f23204fb516",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "f0032c6e-f6ab-4a22-9dc2-ea022f69ffd3",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ce215e7-bdc7-4ed6-8114-0daf1cf55633",
														"exec": [
															"// var jsonData = pm.response.json();\r",
															"\r",
															"// pm.test(\"Status code is 200\", function(){\r",
															"//     pm.response.to.have.status(200);\r",
															"// })\r",
															"// pm.test(\"Status code is Not Found\", function () {\r",
															"//     pm.response.to.have.status(\"OK\");\r",
															"// });\r",
															"\r",
															"// pm.test(\"Status is success\", function(){\r",
															"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
															"// })\r",
															"// pm.test(\"message is 'success'\", function(){\r",
															"//     pm.expect(jsonData.message).to.eql(\"success\")\r",
															"// })\r",
															"// pm.test(\"User is active'\", function(){\r",
															"//     pm.expect(jsonData.data.status).to.eql(\"active\")\r",
															"// })\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "4a0ce47b-368c-4e6f-b19a-b6442fbfc956",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "05c10d7a-8271-4a83-afdb-7d6fd88ae50d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Activate already active user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3a177ae-c073-4c1f-8d9c-926831bc426f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot activate an active user'\", function(){\r",
															"    pm.expect(jsonData.message).to.include(\"Cannot activate a user\")\r",
															"})"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b98bf9dc-6e09-4514-a47b-10f02bbbe52e",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "35e943f8-6012-4095-8190-eb378cc89c49",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"key": "user_id",
															"value": "3"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "8c8439e5-56cf-4c56-b702-4a7bbc6382a6"
								}
							],
							"id": "b6e6ca36-7b56-47e6-b0dc-e38a3df4892a"
						},
						{
							"name": "Change User Password",
							"item": [
								{
									"name": "Change User Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e22bee38-92f2-499b-91c5-ba2e662a11f2"
											}
										}
									],
									"id": "aee6abde-6fe0-4bc1-9aa7-6e9aeaa4a272",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@\",\n    \"confirm_new_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Change Password again",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9e8915c7-39c9-4bc5-bf70-76343712cde7"
											}
										}
									],
									"id": "f5527f7b-b0f4-434e-ba06-e3e89ac1eeec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password- Current = New Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Old Password the same as New Password'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Old password used again. Enter a new password\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9ed52803-e320-4036-9976-a400b710e553"
											}
										}
									],
									"id": "a587cfac-0216-4399-977b-d58920f023f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty current password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'current_password should not be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Current password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e242e4dc-8631-489d-b548-3e14cb79c36c"
											}
										}
									],
									"id": "068371b0-3344-412c-9e5f-87924bbce3cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"\",\n    \"new_password\": \"Tester@11.\",\n    \"confirm_new_password\": \"Tester@11.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak.'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak.\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "2cafc6cd-d3d0-4428-acfc-13ce7288d431"
											}
										}
									],
									"id": "1c9f6cc6-998d-4a32-b59e-e0e63044b226",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password\",\n    \"confirm_new_password\": \"Password\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty New password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0044c80-5bb4-40ee-bbba-72fdae8a1fc2",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2d269064-891d-4d91-83d5-78c943695be7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty Confirm Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_new_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_new_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ec23a870-2b3c-444c-bf62-c25068321226"
											}
										}
									],
									"id": "1d23dd31-49ba-4403-bd85-37ba2580d182",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password Mis-match Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "f5dd0c32-0871-4287-843a-aae98b8b4951"
											}
										}
									],
									"id": "8ce5d3e9-73b7-44dd-b79e-361b39bde687",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"Password@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								}
							],
							"id": "63705b0b-929e-48f6-af06-cab4dc3ccb0f"
						},
						{
							"name": "Resend User Invite",
							"item": [
								{
									"name": "Resend User Invite - Pending and Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcade068-dca6-4769-94b3-8299d80d58c7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully returned\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4b7ffa83-2223-4004-a6a7-9990e13c2b1a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "db518fdf-e6a9-4323-8ef7-64ba85897906",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Active",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Can only resend invite to pending users'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Can only resend invite to pending users\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "df99abfb-c8e0-4f2f-b975-783efa1faa61"
											}
										}
									],
									"id": "d4fa21c7-7115-402a-8773-dc2275d4d7f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "04d969be-3af4-4c4f-8a5e-64a60fdfe95f",
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "d02e1aa8-d195-4826-b481-e90fe4bb865d"
											}
										}
									],
									"id": "ecb571b1-7f7e-4492-bfc7-a89adfe1b40e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "86c3e6a4-cd1d-433e-9674-c4cb4689a2bb",
													"key": "user_id",
													"value": "aa"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "225209e0-459e-40d7-8436-eab46f436bc5"
						},
						{
							"name": "Fetch User's Stats",
							"item": [
								{
									"name": "Fetch User's Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ee6981a2-cee4-4849-8e1d-61581f71d5a3"
											}
										}
									],
									"id": "3e10c7a1-4b0a-4646-832e-448d48078f94",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								},
								{
									"name": "Fetch User's Stats - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8bc6a5b6-d542-4eeb-bedf-560ea89fa590"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "ae249165-0e53-4b90-9885-7ab948adbf9a"
											}
										}
									],
									"id": "5e1bf1d9-3c31-4775-992b-49ab7ee7efec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								}
							],
							"id": "42eef454-7f56-4502-ba62-414ee92243f5"
						},
						{
							"name": "Password Reset",
							"item": [
								{
									"name": "Password Reset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ee2a36d-c66d-46f5-8e0c-68d3b2c75cc3",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is 'Password reset link successfully sent'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Password reset link successfully sent, please check your email\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2059b51b-3691-40f5-b3b2-a5e200366055",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "43baa581-5453-45cf-9fb0-b8dcea28dc7d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{userEmail}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "70f73a72-8cbb-4966-a5b3-f902458b4f2a",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "44e581d0-2f28-450c-b5a3-d26632c554b7"
											}
										}
									],
									"id": "a480747a-5321-4f1f-8d0d-120a65252965",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@mailinator\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "2884eded-52a6-4e77-bcc6-a7c252405d0c",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8a9def5a-4354-4170-97b7-39f5e6585ea9"
											}
										}
									],
									"id": "42e74de7-4f79-40fc-b549-fd60554fbe77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \" \"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "9923b161-cecf-4bff-8d22-e6345f7ebbc0",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Non-existing Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0c5f08c2-4139-412d-975e-88659db9916f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User does not exists or inactive'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User does not exists or inactive\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6b5872e6-4380-4ab5-8caa-dfeb3ee699e6",
												"exec": [
													"// postman.setNextRequest('Create Mandate')"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a1ca75d8-2d18-4474-bfa4-47356f489540",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@getnada.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "929c4b14-e0fd-4242-b953-61aa1a62f53a",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "58aa6d13-84e8-43f7-bc52-3f784ce1dbf7"
						},
						{
							"name": "Reset Password",
							"item": [
								{
									"name": "Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c49c958a-e177-4854-a0f4-03a35ddda6e3",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is 'Password reset successful'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Password reset successful\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f2c84b2b-8f0c-4086-ba80-33092def39ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "32195931-0cce-47c0-a4f6-1ad0572ced2a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "6d49cb8f-201f-4f95-93b2-0573cad83360",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "70600adb-1458-43fd-a252-208b880249cd"
											}
										}
									],
									"id": "f3329054-3671-421d-b9c0-ff3ae307623a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "e00a891d-18ed-42dc-b81c-8b450d8df02b",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "42a6e02b-5e4c-4b5e-8dfa-fe3923244684",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Password does not match complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ff4e8e47-08aa-457c-8c95-5a1bd16588dc"
											}
										}
									],
									"id": "51c0c31e-af43-4caa-9929-49a3b9ce1d53",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Passwor\",\n    \"confirm_password\": \"Passwor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "aab615eb-8ce8-41b3-957e-44e0d91527d9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "07d2771b-7d5f-4a91-acc1-251b9a1f74d5",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - mismatched New Password And Confirm Password Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "1fdb6b10-f1ae-4ede-b50f-6507036483d4"
											}
										}
									],
									"id": "f02738c6-2e81-4be8-9bed-c8c13f8f35f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "4bfdc19d-315e-465a-8d6b-647ab60e2aee",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "f1616ddc-7b03-41a6-b55c-727d5d60dab2",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "5dc953b5-0aab-4519-9786-613950ba9e34"
											}
										}
									],
									"id": "78da798f-a85f-4979-a0fc-c3e7662e3edc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "d4c3dd53-91b0-4641-9458-334877776148",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "c40d62d4-a6f8-4fa3-99bd-8c5fb18a9889",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "5339c53f-7473-4bc1-86e6-4f4cca6c3137"
						},
						{
							"name": "Accept Invite",
							"item": [
								{
									"name": "Accept User Invite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9fea0004-9dff-43f1-bbce-5ab06d47f9e8"
											}
										}
									],
									"id": "02b8a1ea-c45f-41c2-994d-8873533dda9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "a07808c6-413e-4147-b3fb-99c266cbeb9a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "2967ee46-a5e5-4ed2-bcfb-bc53a7e650e4",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Invalid or wrong password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8436f913-ca27-469a-8274-a1bb139a50c1"
											}
										}
									],
									"id": "67815353-26ae-4d63-bdcf-062de122f8fb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "c7ad5b53-a06c-4091-a9a4-abfb2c1f3de0",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "114a6382-e4a3-406f-a6c8-0b90f339ebfa",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "4e4da7e1-e4d4-430d-8a92-ee5a1568f83b"
											}
										}
									],
									"id": "be321c40-1d2c-4b77-849b-706ee08ff65a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "0e39b547-91fd-4455-8602-17d9abc35d07",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "a7adb38b-1789-47ef-b666-b659cf382f6f",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "61ec2d18-d093-4588-af93-8535b6a91725"
											}
										}
									],
									"id": "01d3a28c-a571-41aa-9b19-45fa3ec315a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "91dee3b4-625e-4d17-8d32-8eedf1db0ab9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "e578fc6e-3734-41c4-afb4-f7e3e542a492",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "569e791d-36b7-4e9e-8ec0-1189065d37bb"
											}
										}
									],
									"id": "32e9a0a8-62fb-452b-b3f0-bde33629db63",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5b5910a6-c147-460e-886a-f9d5c9f3fa8a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "4771c16a-589e-44a3-a8bc-818d80680592",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Password field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "aec4c203-7e79-4ecd-a10b-5592604dd50f"
											}
										}
									],
									"id": "481de9b3-cadf-4cee-b4e7-f1deb06843ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "e6382ce9-d3df-4bd9-be51-d150d979c121",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "9513f555-e24c-4571-9f65-e8eaef1d9ffc",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Doesn't meet Password Complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "6fe7e58e-7b99-4ac6-a2dd-2b36a3b79251"
											}
										}
									],
									"id": "dd939651-1954-4687-bb27-1d80aab4b0a4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5685a7b3-f927-45e2-81cf-474bb0a4d2a4",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "c4f9397c-84c8-47cc-ab0d-234c50602790",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								}
							],
							"id": "c23cff80-c9fd-45e6-a0f8-4543b0339cf8"
						},
						{
							"name": "Get User's Mandates",
							"id": "668c55ee-c90d-4153-8124-1345acd239bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id",
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"id": "139c2219-0059-415c-a7d0-4f4db0ef56f3",
											"key": "user_id",
											"value": "{{UserID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "421b4054-50f5-4f1f-8626-22e280cd4e2c",
									"name": "Get User's Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3847"
										},
										{
											"key": "ETag",
											"value": "W/\"f07-yRcWIhe96/5qwNoRB2DKqBCO7R0\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:10:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 7,\n                \"bank_id\": 52,\n                \"account_number\": 1780004070,\n                \"account_name\": \"vee Test\",\n                \"reference_number\": null,\n                \"frequency\": 1,\n                \"bvn\": \"33333333333\",\n                \"session_id\": \"999999230330145645170092220580\",\n                \"phone_number\": \"08139354433\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-05-10T00:00:00.000Z\",\n                \"end_date\": \"2023-05-15T00:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"workflow_status\": null,\n                \"debit_type\": \"all\",\n                \"entity\": \"user\",\n                \"created_on\": \"2023-05-11 02:20:53\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-05-11 07:58:41\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"5\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "f7be05fb-2c6e-4def-bb5a-b24b6ce9b7fd"
				},
				{
					"name": "Beneficiaries",
					"item": [
						{
							"name": "Create Beneficiary",
							"item": [
								{
									"name": "Create Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "81bf4091-b204-42b3-9cfd-a6fe6a5a5732",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"// var RequestData = JSON.parse(pm.request.body.raw)\r",
													"// pm.environment.set(\"beneficiaryId\", jsonData.data.id)\r",
													"\r",
													"// pm.test(\"Status code is 201\", function(){\r",
													"//     pm.response.to.have.status(201);\r",
													"// })\r",
													"// pm.test(\"Status code is Created\", function () {\r",
													"//     pm.response.to.have.status(\"Created\");\r",
													"// });\r",
													"// pm.test(\"Status is Success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"Validate message is 'Beneficiary created successfully'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Beneficiary created successfully\")\r",
													"// })\r",
													"// pm.test(\"Validate that an accurate account number is returned\", function(){\r",
													"//     pm.expect(jsonData.data.account_number.toString()).to.contain(RequestData.account_number)\r",
													"// })\r",
													"// pm.test(\"Validate that an accurate bank ID is returned\", function(){\r",
													"//     pm.expect(jsonData.data.bank_id.toString()).to.contain(RequestData.bank_id)\r",
													"// })\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a48eb888-3ec2-49c1-bda8-157060910ea2",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ff9c9c3e-b3a1-402a-9327-bdcf8669bd45",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0008854010\",\n    \"bank_id\": 1,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "044bcd03-1d7e-4121-b771-a9d358ddaa20",
											"name": "Create Beneficiary",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/beneficiaries"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "431"
												},
												{
													"key": "ETag",
													"value": "W/\"1af-/ERSKy+lnrfgyT3k6n/IavX29bE\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:06:58 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Beneficiary created successfully\",\n    \"data\": {\n        \"account_number\": 112345678,\n        \"bank_id\": 52,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"id\": 1,\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Beneficiary - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "30b66b79-ad6f-4049-8827-8817e1b78937",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9940452f-2770-4b89-8b0b-e53ab7ce22bb",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "48a6851a-340d-4c93-bda4-ccaf2fb471ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6441b796-005f-4c6c-8d59-c83bc1f196c0",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "87fcccfc-8cbf-4a1a-ad8d-4d1168390305",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "407450d1-0064-49e7-9eac-4c52faa0b700",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Empty Account Number Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bbe75b6-6d33-4506-a3dc-f5069d32df32",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate empty fields\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"account_number must be longer than or equal to 5 characters\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "545b8df3-744a-4a68-b14b-47517ec2ade2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0323d3dc-cdb7-4727-a89d-f1da64326674",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Empty Bank ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ac2e4ed-8a8d-43bf-a1d2-a79081035d5d",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate empty fields\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"bank_id must not be less than 1\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2a8081c7-59f3-4145-8a9c-e5ffa3cc5655",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b67d934-236c-42cb-aa3f-8f16ea63b5ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": null,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Mismatched Bank Id and Account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7d6bc1c-d119-4cd8-a657-813dc5b42a0b",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate error message\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid Account\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "13240981-0ed7-4fb5-a788-1935725cd7f1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7e1b099d-734e-43ab-a63c-bf15e7e0ce31",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 1,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Non - existing Bank Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "465af980-fdd2-43bd-8955-329365afb107",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate empty fields\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Bank not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "534fcd7b-4bb0-4c78-a67e-dd06d4ba1fee",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6a2188ad-d2c3-4c8b-963f-6b246c36c1d7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 44,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Invalid Bank ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e106bae-7c05-4b5f-b84f-4c2ded4d33bc",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate invalid bank field\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"bank_id must not be less than 1\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e40e98df-da44-4cc2-adc9-26a555928f05",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3f6c3b41-5ad9-47ad-b3ed-ff0ce5c18c8e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": \"54\",\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Non-existing account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1734ce39-0a85-4d54-bc76-dcaddfb0a42f",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate error message\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid Account\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "56d97c5f-6b25-45c5-9c5b-c5915c43a54c",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8377a7e5-9079-4d4f-8d77-a16da6468c8d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0112345079\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Account No less than 10digits",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b709c9f1-a430-48ab-994b-ce0925319034",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate valid system\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Account Number can not be greater or less than 10\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "286b7dff-2e86-4f6a-b882-b3781abd53f9",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9f15deb0-4303-4148-a340-38f2173db77b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"315964377\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Account No more than 10digits",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d4ed220-88da-4ed3-a970-c1b37dec9a7a",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate empty fields\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Account Number can not be greater or less than 10\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d8c76898-1d97-4cb4-9781-69c64bd8c552",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "69584793-6a6b-43ac-8263-042a86730c89",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"31596437790\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Invalid Account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d44fadc-ddd6-4377-a092-cb1537dac15b",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate Accorunt number\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Account Number can only be numbers\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8266949-37e6-4776-b68a-581678fb289a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "411d5b19-4587-416a-ad9a-b20d5b147fd8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - No Address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d36af77-1f42-4fd6-b21a-7ffa1b4f6c95",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate error message\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"address must be a string\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "651d0f41-1caa-40ae-ac02-1ef33c1588fc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "67de4875-bc7b-45fa-8ca0-c10c08a95303",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								},
								{
									"name": "Create Beneficiary - Address is numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d36af77-1f42-4fd6-b21a-7ffa1b4f6c95",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate error message\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"address must be a string\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "651d0f41-1caa-40ae-ac02-1ef33c1588fc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bc410f9e-b82e-4a9b-9634-3735e6373dba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"address\" : 2,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/beneficiaries"
									},
									"response": []
								}
							],
							"id": "e15bbd3a-ab71-46b3-bbd9-43ba25287510"
						},
						{
							"name": "Fetch Beneficiaries",
							"item": [
								{
									"name": "Fetch Beneficiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript",
												"id": "904f8c8f-0992-4bea-a6be-e93b2312aa2f"
											}
										}
									],
									"id": "ac81d885-2ec8-454b-96f2-f543e46b8cad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "280d1142-6583-47e2-9f2e-0c79941f1aa5",
											"name": "Fetch Beneficiaries",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "476"
												},
												{
													"key": "ETag",
													"value": "W/\"1dc-B7QMNqYBTuqfSHmor2PVFSnpwuM\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bank_id\": 52,\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427160655421826470232\",\n                \"last_transaction_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:06:57.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiaries - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "942f54ee-3ecc-4300-8016-3e1032628ddc",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5b73205e-01b5-4de8-ba66-3279e340832e",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "62ac6d43-382e-4f88-85b0-a5660ffda8c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Beneficiaries - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c017c4c0-bc4d-4fa5-acbe-618573e3fb22",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "959376f5-cd20-4738-8c03-9d425ee25f7e",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "35785265-106e-4f64-aac7-12fa15791aad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "e6f9a8ab-b5a1-4ce9-87f4-12a6b913c166"
						},
						{
							"name": "Fetch Beneficiary",
							"item": [
								{
									"name": "Fetch Beneficiary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "74ac6a3d-eec6-4a62-998d-b424a85c7c53",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1a191743-f608-4bc0-8eaf-1ebf5b7fa11c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id/",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												""
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "7"
												}
											]
										}
									},
									"response": [
										{
											"id": "947e9b2d-2017-4ebc-a4b9-efe9ab0b4c2e",
											"name": "Fetch Beneficiary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries",
														":beneficiary_id"
													],
													"variable": [
														{
															"key": "beneficiary_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "406"
												},
												{
													"key": "ETag",
													"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary - Invalid Beneficiary ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5580baef-1dc8-4d5d-b33a-38018978f9fa",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate invalid Beneficiary ID\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Beneficiary not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "15642701-3910-4cc2-90cc-e3cd43879dde",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "535d740e-17c6-4117-91bd-b6538233a50e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"id": "8e448a68-14d6-4cd6-8d2f-9d0eba58da63",
													"key": "beneficiary_id",
													"value": "t"
												}
											]
										}
									},
									"response": [
										{
											"id": "ac023211-444c-4a61-8913-a40bea5878df",
											"name": "Fetch Beneficiary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries",
														":beneficiary_id"
													],
													"variable": [
														{
															"key": "beneficiary_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "406"
												},
												{
													"key": "ETag",
													"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary - Non-existing  Beneficiary ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8391a0f-1ccf-4409-a269-54aef68bed50",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate empty fields\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Beneficiary not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c64a646a-fce5-4f93-86d5-3639ebe859c4",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "aecb63f8-e394-4a63-b501-bbdc6281817d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"id": "ef4fd9b6-afcf-4592-b8c0-c8340f45dd73",
													"key": "beneficiary_id",
													"value": "20"
												}
											]
										}
									},
									"response": [
										{
											"id": "1b8634f0-7d42-4684-9331-891536d8fd19",
											"name": "Fetch Beneficiary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries",
														":beneficiary_id"
													],
													"variable": [
														{
															"key": "beneficiary_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "406"
												},
												{
													"key": "ETag",
													"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "40774723-7aaa-4ae2-ba3a-ba40708d1116",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5058f715-df56-4827-8e70-3778227c232e",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5f862f5b-4a81-4895-bf0c-8d40030190dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"id": "fa6b630a-7b68-468a-a1dc-abf7ab374932",
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "7bb992e4-c156-4565-a94e-df9ee3868daa",
											"name": "Fetch Beneficiary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries",
														":beneficiary_id"
													],
													"variable": [
														{
															"key": "beneficiary_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "406"
												},
												{
													"key": "ETag",
													"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "182541b5-41d2-4fe9-ac30-fcbe9eb5fb48",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0a3ea4f9-6ef9-4864-b9de-15345a661c22",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "db9c8139-3af1-4cfa-9fb5-ed3b1ee842ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"id": "98fec5de-ffee-40d5-9f66-bae8147a4f3d",
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "21236d0d-4f97-4286-beb5-de8e55935f62",
											"name": "Fetch Beneficiary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"beneficiaries",
														":beneficiary_id"
													],
													"variable": [
														{
															"key": "beneficiary_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "406"
												},
												{
													"key": "ETag",
													"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:07:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "5b54b7f6-fcf9-4324-8fe1-616308b4f34c"
						},
						{
							"name": "Activate/Deactivate Beneficiary",
							"item": [
								{
									"name": "Activate/Deactivate Beneficiary - Activate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bac9f1f5-91d9-46b5-82a9-f3d44c1284bf",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2a6760b8-7ce5-4034-97d4-cad2bf896625",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d674b45d-65e2-4c89-85bc-cbc97b8e5d24",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												":type"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "7"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Beneficiary - Deactivate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e2bacc6-37c5-46ae-884b-8400ddd4c613",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0ff45987-1ba8-4dcf-8b31-69539351aa80",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a05cbf2d-61fa-4a22-8935-b1fa79d5d38a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"inactive\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												":type"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "7"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Beneficiary - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5235d27a-ff6d-407b-97d2-4df58a08d89d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "72c7febd-2491-4e1a-a0ea-ef30161d87a3",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8f81976b-95fa-47f3-9ecd-4558d3bb1fb7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												":type"
											],
											"variable": [
												{
													"id": "e34d9f69-6f17-439e-9b61-efd5d864889c",
													"key": "beneficiary_id",
													"value": null
												},
												{
													"id": "5cac122e-20e2-4c5c-bce1-64cb6e21f0e8",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Beneficiary - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "462c093e-a528-4de5-b864-5a53b0bae9d3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1282c9b4-5a3b-41af-b972-022f189e9891",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "276e7d27-0530-49eb-8b57-0c0a5c927810",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												":type"
											],
											"variable": [
												{
													"id": "25fae0c7-8eec-4f23-9e97-f4c5d4a32715",
													"key": "beneficiary_id",
													"value": null
												},
												{
													"id": "2613d0a1-2253-48ab-ad10-71b3a03e9751",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "3ceffab5-dbdf-4971-97d0-af9764190abe"
						},
						{
							"name": "Fetch Beneficiary Stats",
							"item": [
								{
									"name": "Fetch Beneficiary Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76c4dc81-2170-42b6-93fe-6343798b424d",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"/**pm.test(\"Validate the sum total of Pending, Active and Inactive stats\", function(){\r",
													"    var Pending = jsonData.data[2].count\r",
													"    var Inactive = jsonData.data[1].count\r",
													"    var Active = jsonData.data[0].count\r",
													"    var MandateID = pm.environment.get(\"mandate_id\")\r",
													"    var Total = Pending + Inactive + Active \r",
													"    console.log(Pending, Inactive, Active, Total, MandateID )\r",
													"    pm.expect(Total).to.eql(MandateID)\r",
													"})**/"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a7370520-52b1-4166-9522-9f4fccf947fb",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "28249c07-93fb-4ec7-882b-83a128afed14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/beneficiaries/stats"
									},
									"response": [
										{
											"id": "f2160b55-6753-4d95-88b0-85d5cf3d49db",
											"name": "Fetch Beneficiary Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/beneficiaries/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "79"
												},
												{
													"key": "ETag",
													"value": "W/\"4f-xOIaF6pNOAGaSQbwDT069F8uyKs\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:26:26 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 1\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary Stats by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"/**pm.test(\"Validate the sum total of Pending, Active and Inactive stats\", function(){\r",
													"    var Pending = jsonData.data[2].count\r",
													"    var Inactive = jsonData.data[1].count\r",
													"    var Active = jsonData.data[0].count\r",
													"    var MandateID = pm.environment.get(\"mandate_id\")\r",
													"    var Total = Pending + Inactive + Active \r",
													"    console.log(Pending, Inactive, Active, Total, MandateID )\r",
													"    pm.expect(Total).to.eql(MandateID)\r",
													"})**/"
												],
												"type": "text/javascript",
												"id": "69a3fe7f-35d8-42b0-b178-4d6476dc63e8"
											}
										}
									],
									"id": "a600dc9f-deaa-419f-bc4f-649d005cb887",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id/stats",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id",
												"stats"
											],
											"variable": [
												{
													"id": "cf39b891-6d95-404f-80b5-45e05522e517",
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "504373b3-a659-4f43-b092-bba66370e711",
											"name": "Fetch Beneficiary Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/beneficiaries/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "79"
												},
												{
													"key": "ETag",
													"value": "W/\"4f-xOIaF6pNOAGaSQbwDT069F8uyKs\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:26:26 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 1\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Beneficiary Stats - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7765b3af-41ea-4713-810d-54323ee6986b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d14cb449-8a9d-4cfd-8760-8bd5c14988ed",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0357d29a-c0b5-4add-9415-1c9a2929767e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": "{{base_url}}/beneficiaries/stats"
									},
									"response": []
								},
								{
									"name": "Fetch Beneficiary Stats - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22606418-f8dc-4e5e-889b-3bcbe941e1ad",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "76982c8d-ffa4-47d6-b4eb-8b29337799d9",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c62e7e58-cb5c-4ac8-ac60-655a86dc035a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": "{{base_url}}/beneficiaries/stats"
									},
									"response": []
								}
							],
							"id": "ef8cacc6-3867-4dd2-9744-846d647d86b7"
						}
					],
					"id": "d3bc67ba-6e00-42b5-b0f1-6374388d0084"
				},
				{
					"name": "Banks",
					"item": [
						{
							"name": "Fetch Banks",
							"item": [
								{
									"name": "Fetch Banks - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0f0d781-d9a0-4a09-a236-db99e7929aea",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"The Bank Name and Bank ID is returned\", function () {\r",
													"    const Data = jsonData.data.data;\r",
													"    Data.forEach(function (bank) {\r",
													"        pm.expect(bank.id).to.be.a('number');\r",
													"        pm.expect(bank.name).to.be.a('string');\r",
													"        pm.expect(bank.bank_code).to.be.a('string');\r",
													"        pm.expect(bank.institution_code).to.be.a('string')\r",
													"        pm.expect(bank.institution_code.length).to.greaterThan(4);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6432ccef-4264-4a7c-b123-befd93b5f1b4",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6ab978c3-0e17-4014-9650-4c1bce707b0d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a28f5bb6-dc94-4b28-9657-f234bb7fe7ba",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1c8a2391-e620-44fc-9811-ac03f5535af6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c8a982e5-ce86-4f76-ac6d-536902fe80f8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9761f057-5c2b-4436-8b88-a6c6714ac595",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0500ae4d-7f03-4e0a-a8d6-f663e82681cd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4ed3cfa2-e7b9-4b99-acdd-d1a60780ff7a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdebc88b-0e53-4c38-8055-2a84dc07fbbf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9b219601-d80a-460a-9eec-0beefe40dc03",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "eefcaf58-ab04-451b-ac44-e5afbb202c77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "e94de19a-9507-4286-9a4b-2e40799e91f7"
						},
						{
							"name": "Fetch Bank",
							"item": [
								{
									"name": "Fetch Bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1eaf6c4-e93a-4482-a7b8-836f67767edc",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b322f98f-9040-455b-9ea7-5c9b3114ad75",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d685586d-0076-45fb-8801-edf52e6572b4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "cf5f5359-c702-42e8-88d2-76cf1b43b7a1",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "6f430f43-b5d4-4f8b-8076-5fba4fe7bb7f",
											"name": "Fetch Bank",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/banks/:bank_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"banks",
														":bank_id"
													],
													"variable": [
														{
															"key": "bank_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "365"
												},
												{
													"key": "ETag",
													"value": "W/\"16d-7QieTGIC9XbSXDesBODEj2aaqsg\""
												},
												{
													"key": "Date",
													"value": "Mon, 24 Apr 2023 20:32:09 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"status\": \"active\",\n        \"created_on\": \"2020-06-26T16:09:32.000Z\",\n        \"created_by\": null,\n        \"modified_on\": null,\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Bank - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2a0bed1-2a43-4e7a-9a5e-7044f6f80b7b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5bdb3d07-6484-48bf-a470-f1512ea77c87",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6bb6e82c-0643-465f-afdc-4c23f0d687b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "a03f300e-a3a9-4949-94d9-b655a279841b",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Bank - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50220dc1-ad86-4adb-96de-fa357cfede86",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a24f1c2c-1646-4fd0-b1a0-1281617376da",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "06942a4b-9f83-4313-b42d-9aeae62dbc13",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "68d643ec-c795-4fb3-a182-bca0aac34bb8",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "cac3a9de-a114-4d8d-82e8-3108a14d6945"
						},
						{
							"name": "Account Lookup",
							"item": [
								{
									"name": "Account Lookup",
									"id": "ee4db5e3-fb40-45f3-b657-8094e9ae10df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/banks/account-lookup"
									},
									"response": [
										{
											"id": "f89a7b1e-96ad-41ee-8da1-e7d5edb76d93",
											"name": "Account Lookup",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/banks/account-lookup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "141"
												},
												{
													"key": "ETag",
													"value": "W/\"8d-gED12kCzTHDqZpjC4M4KJhmfA8M\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:06:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160615129743771734\"\n    }\n}"
										}
									]
								}
							],
							"id": "ae322382-045a-436f-9f89-2ba397a7135a"
						},
						{
							"name": "Fetch Enquiries Stats",
							"id": "60a45fde-45ae-44a9-8e76-c0fe4df8beca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/banks/stats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										"stats"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort_dir",
											"value": "ASC",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "6df8c8c9-67a6-4202-98a2-f03c2dabed1d",
									"name": "Fetch Enquiries Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/stats",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												"stats"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sort_dir",
													"value": "ASC",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "208"
										},
										{
											"key": "ETag",
											"value": "W/\"d0-UXRJ7J3uI7kE1CiL+iizPIB9g7U\""
										},
										{
											"key": "Date",
											"value": "Sun, 04 Jun 2023 11:37:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ],\n        \"balance_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "0239048a-b9c4-45ef-b05b-abaea092ae35"
				},
				{
					"name": "Keys",
					"item": [
						{
							"name": "Create Key",
							"item": [
								{
									"name": "Create Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"pm.environment.set(\"KeyID\", jsonData.data.id)\r",
													"pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
													"pm.environment.set(\"SecretKey\", jsonData.data.secret_key)\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is Created\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"pm.test(\"Status is displayed as success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'API keys created successfully'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"API keys created successfully\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "38f20989-45bf-4336-8966-aab750a88125"
											}
										}
									],
									"id": "dec1b51f-4838-4f37-bdfc-e9f261dfa167",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}}\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\" : \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": [
										{
											"id": "a16c3bf7-62c8-4548-8084-7c07a0e35067",
											"name": "Create Key",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/keys"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "503"
												},
												{
													"key": "ETag",
													"value": "W/\"1f7-Ys8+7Iw1w9rH0dItFAYiu17o9kQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"API keys created successfully\",\n    \"data\": {\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"secret_key\": \"246e4ab2be56e90c2e9913fc35f2b9f60e56c29abadc80d1bcc8ede22ada5a52\",\n        \"id\": 1,\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Key - Already Existing Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'API key name exists'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"API key name exists. Use a new API key name.\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "9a0beed7-ffce-4853-b1a7-a1afba85948f"
											}
										}
									],
									"id": "1069adea-e506-4021-ba6c-c0a39c6200cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty Name Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Name cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Name cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "18a7600c-3a85-4e91-ac76-60e32d3dc114"
											}
										}
									],
									"id": "adc4e6df-241f-420e-8ed0-dd005275f19f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty Description Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Description cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "a1f5c939-50cc-4cb1-bb38-da857792c724"
											}
										}
									],
									"id": "68d02a71-2225-4dd3-b501-5bd1d40c7c81",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty Webhook Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'webhook must be a URL address;\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "638218bf-0ffd-4715-b60e-9fc5ad7352a1"
											}
										}
									],
									"id": "eb3f5805-2e8c-44fb-be5e-103060acbd46",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty Invalid Webhook Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'webhook must be a URL address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "d7574e5b-4d61-49fc-80ae-0b7e9b82f3a6"
											}
										}
									],
									"id": "2d402708-5e02-420c-b346-455d126be77a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty TimeOut",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "15b12a99-af4a-41cb-b9a4-ab6ff44d1bbd"
											}
										}
									],
									"id": "751c42f1-1390-4d62-8b46-a3ae08584c48",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": null,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Invalid TimeOut",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "4c478795-a58e-41a6-903f-99bd0d324ae1"
											}
										}
									],
									"id": "0e4434ed-9f98-412f-9049-e17294bbc58a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": \"ee\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - TimeOut Lesser  than 5",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "81cebdbf-a6e9-4dad-a768-a2a48a9f682f"
											}
										}
									],
									"id": "d6d1c8bf-3bd6-46a2-b037-755a753f5d0a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 4.9,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Empty Token Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c0c6b84-bd9f-4058-98a2-9ce69e66ec6e",
												"exec": [
													"// var jsonData = pm.response.json()\r",
													"\r",
													"// pm.test(\"Status code is 400\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"// pm.test(\"Status is displayed as Error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "469a2e0f-ef47-4243-8085-508ea183798f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "049e3a6f-afb0-4d24-8711-fa9855038e59",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomFirstName}}Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "4164c9e0-3d5f-4d21-9538-c7128666f014"
											}
										}
									],
									"id": "6e15d519-0ac6-48d1-8812-29b9a3801035",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"0000ab\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Wrong Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "5c49303f-0c82-40cd-9224-d3494261eb37"
											}
										}
									],
									"id": "a37cdf19-bf63-42f2-bb88-833c64704593",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000033\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Less than 6 digits Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "b150cf39-4ed2-40db-a8ee-33563764f400"
											}
										}
									],
									"id": "b0ad6e2f-9373-4351-ba70-6e9f7eaa0435",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"0000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								},
								{
									"name": "Create Key - Greater than 6 digits Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9a3c723-4485-4a2d-b6a9-74755a4ba52a",
												"exec": [
													"// var jsonData = pm.response.json()\r",
													"\r",
													"// pm.test(\"Status code is 400\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"// pm.test(\"Status is displayed as Error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ec328eed-ef8f-4bbc-8ebf-32381748d333",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomFirstName}}\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"00003367\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys"
									},
									"response": []
								}
							],
							"id": "0d483f1f-f1ab-4d5c-9996-cc5ee1709206"
						},
						{
							"name": "Fetch Keys",
							"item": [
								{
									"name": "Fetch Keys",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"console.log(pm.request.url.query)\r",
													"\r",
													"\r",
													"QueryParams = (pm.request.url.query)\r",
													"console.log(QueryParams.get('limit'))\r",
													"\r",
													"var limit = QueryParams.get('limit')\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate Page Size\", function(){\r",
													"    pm.expect(jsonData.data.meta.page_size).to.eql(limit)\r",
													"})\r",
													"pm.test(\"Validate Page Size\", function(){\r",
													"    console.log(parseInt(limit))\r",
													"    console.log(jsonData.data.data.length)\r",
													"    pm.expect(jsonData.data.data.length).to.lessThan(parseInt(limit)+1)\r",
													"})"
												],
												"type": "text/javascript",
												"id": "1ea6e3ee-b990-4ba8-a5e0-94cb626e20e8"
											}
										}
									],
									"id": "fe9ffc62-1a1a-4620-a77c-c552f08ec1a5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "search",
													"value": "",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "date",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "5b11bebb-0fce-4fca-99f6-3373f0a4902e",
											"name": "Fetch Keys",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "471"
												},
												{
													"key": "ETag",
													"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Keys - Check Page",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"console.log(pm.request.url.query)\r",
													"\r",
													"QueryParams = (pm.request.url.query)\r",
													"console.log(QueryParams.get('page'))\r",
													"\r",
													"var page = QueryParams.get('page')\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate Page number\", function(){\r",
													"    pm.expect(jsonData.data.meta.page).to.eql(page)\r",
													"})"
												],
												"type": "text/javascript",
												"id": "1d3f5ebe-01f4-46e0-834c-41019072a577"
											}
										}
									],
									"id": "f9f05b6e-2ae6-4ac7-976f-0b8cc7558494",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "79b9d6f7-3240-4556-bc37-77ddf20314b5",
											"name": "Fetch Keys",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "471"
												},
												{
													"key": "ETag",
													"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Keys - Check Limit per Page",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"console.log(pm.request.url.query)\r",
													"pm.environment.set(\"TotalKeys\", jsonData.data.meta.records)\r",
													"\r",
													"QueryParams = (pm.request.url.query)\r",
													"console.log(QueryParams.get('limit'))\r",
													"\r",
													"var limit = QueryParams.get('limit')\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate Page Size\", function(){\r",
													"    pm.expect(jsonData.data.meta.page_size).to.eql(limit)\r",
													"})\r",
													"pm.test(\"Validate Page Size\", function(){\r",
													"    console.log(parseInt(limit))\r",
													"    console.log(jsonData.data.data.length)\r",
													"    pm.expect(jsonData.data.data.length).to.lessThan(parseInt(limit)+1)\r",
													"})"
												],
												"type": "text/javascript",
												"id": "61911756-d5ff-476b-a682-c77c9b5346dd"
											}
										}
									],
									"id": "5c085295-cffe-4d97-a45d-cedc94be6f05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys?limit=10&page=4",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "4"
												}
											]
										}
									},
									"response": [
										{
											"id": "f301d229-ef76-4c51-bd53-d750a4de37e9",
											"name": "Fetch Keys",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "471"
												},
												{
													"key": "ETag",
													"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Keys - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "151c5da1-9fa7-498e-9b20-23c8f688de8d"
											}
										}
									],
									"id": "a948798b-002b-45d8-8aa4-e4eed567d35b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Keys - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "dadeb5f6-b43e-414a-94fb-7a0e072b01fb"
											}
										}
									],
									"id": "c7651881-9450-4248-9957-acf0e22eec1c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0OTE0NzI3LCJleHAiOjE2ODQ5MTgzMjd9.qrgElm97xxZ_W7qlOZp4zPohW7vt8JUprPEl2NMQfqp"
											}
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "7fa3ba34-2253-46d5-9193-95e44ff3a991"
						},
						{
							"name": "Fetch Key",
							"item": [
								{
									"name": "Fetch Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript",
												"id": "7fbae32e-a3d0-4afa-b0a5-ab336d1ee6e8"
											}
										}
									],
									"id": "03e99560-8c86-4c19-b2da-7f177edea1b8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "3c7f70a2-bae8-4a17-ad30-5833bd35e33e",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "6d026a31-bf23-4075-a0e2-aedf53465de0",
											"name": "Fetch Key",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "ETag",
													"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Key - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "5a741061-fe82-445b-837b-5ec38ecbfcc1"
											}
										}
									],
									"id": "72c410ae-560d-4b65-aa82-fbda39454804",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiSIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "41d36ff5-ad91-421c-9fba-c61cdb583c93",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "696b276e-cc50-4468-8552-4183e3d40913",
											"name": "Fetch Key",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "ETag",
													"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Key - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "bc583cf9-741c-43ee-9eb8-6dc389c13822"
											}
										}
									],
									"id": "5655ae54-a73e-417f-b4c3-818a29fff4ee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "2e3c21e9-ecc7-4987-90ea-18814752b651",
													"key": "key_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "0d203f44-9e1a-417f-a352-ddf7c16f8bc4",
											"name": "Fetch Key",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "ETag",
													"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:28:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "aeba5417-c4df-4dfb-b09d-4553fa3d2fde"
						},
						{
							"name": "Update Key",
							"item": [
								{
									"name": "Update Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"pm.test(\"Setting Environment variables\", ()=>{\r",
													"    pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
													"    pm.environment.set(\"KeyID\", jsonData.data.id)\r",
													"})\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"pm.test(\"Validate that an accurate webhook is returned\", function(){\r",
													"    pm.expect(jsonData.data.webhook).to.contain(RequestData.webhook)\r",
													"})\r",
													"\r",
													"console.log(RequestData)"
												],
												"type": "text/javascript",
												"id": "36c15924-34fa-498a-968c-61c7f591f8be"
											}
										}
									],
									"id": "1ce5805d-28df-4628-a786-c57a12b6134e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"webhook\": \"https://webhook.site/688e8a2e-8d39-4622-9b90-a3f91e1c239e\",\n    \"token\": \"{{2FAToken}}\",\n    \"external_encryption_public_key\" : \"-----BEGIN RSA PUBLIC KEY-----MIIBCgKCAQEAtA0cGzgNtMgLibR6BTBzCODx2yrZgnOoTwEG3drWHYCymaJPZ/qVCV1OzjA+NQlCuPatRUVQ4n/K5vymu44OXPeBQFbxjaDIMZ4FnmvQEmdqrJkrVxODPH2Se0WvZm2jd/k7OQPR1J0h93rWzpkk6u600BYggOOASFcnmN7LVm8Ef8OeKBSZuqFsnUtIFL1+vbcY9zvWdxrB+v4gIMrkhsN9Wr3S+FucFM+MkeduX3bCKbgGanZlBbHmskQwzibKdAZmndwxwADBqzSN799+sdabgBVb3xNPWr00VqQyVeIS9vLHXxk0mS80ZIWCMxu7vesBlTKzdthxE641cBmJBQIDAQAB-----END RSA PUBLIC KEY-----\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "1cf25b67-f724-4287-b167-e2d042645952",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "ca780ffa-bfbb-4ce0-b35b-f7c1a9a65ec1",
											"name": "Update Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "ETag",
													"value": "W/\"191-LzJJQggEmaDs/MiJBdIHe15bRwY\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:29:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"id\": 1,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Key - Empty Name Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Name is required'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"property name should not exist\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "47688ede-d98b-4957-88b0-2fc7b5722b92"
											}
										}
									],
									"id": "ed2e23e2-4b73-430d-a27d-a165751076a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "3ff67c94-4cd5-4a72-9ddd-d96710e4910e",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - Empty description Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Description is required'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "85f7adfd-d357-4b44-aa98-8a5353ec2787"
											}
										}
									],
									"id": "2f24c83b-5c09-4316-b891-f2dfa6d40b5f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\n    \"description\": \"\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "8b45b9e6-31f8-41a4-bf66-ba042ae63b81",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - Empty timeout field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Timeout is required'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 1\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "43bf5c36-b665-4f26-a955-d494d771d5bc"
											}
										}
									],
									"id": "96a7e150-0345-44a3-9f1d-20afd18c7d74",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": \"1a!0\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "27f41974-85f8-466a-beec-ac9c0409ecad",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - Empty webhook field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Webhook is required'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "3de82d80-49ee-4735-8a33-20bb6f354322"
											}
										}
									],
									"id": "3106657c-abe1-4bb8-9208-7a53efa73c80",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "55af7015-3c18-4f32-a5a9-af06e1bd4ddf",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - Empty 2FA Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "591ab999-c5ad-4b39-aa5c-87c9426e8b41"
											}
										}
									],
									"id": "fea82357-7f45-445d-b342-22afdc0523a4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "8209080b-57bc-44d2-a463-d9e15345ae78",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - Invalid 2FA Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13df5ad9-acba-4da3-843f-b66efc162959",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3fe69966-6f44-4bd1-a565-2b44cf3cc6b7",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b526dff2-82c6-461b-b5c8-022815b2acda",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"189789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5722f52f-de99-4d49-af2b-cf22ae47a9ba",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "558778ad-65ca-4dbf-8e55-1cd823ef7198",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b3355344-c375-45d3-8d24-925468560340",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Key -  Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c9f86c64-e795-466c-924b-08f36cdf0075",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aa773cce-0487-44d6-9fc1-74e91db722a2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "afbe8eef-1498-465f-a83e-627bdeb98943",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "bd356390-eac9-4a8f-a879-0312b2a511aa"
						},
						{
							"name": "Reset Key",
							"item": [
								{
									"name": "Reset Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var RequestData = JSON.parse(pm.request.body.raw)\r",
													"pm.test(\"Setting Environment variables\", ()=>{\r",
													"    pm.environment.set(\"KeyName\", jsonData.data.name)\r",
													"    pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
													"    pm.environment.set(\"SecretKey\", jsonData.data.secret_key)\r",
													"    pm.environment.set(\"KeyID\", jsonData.data.id)\r",
													"})\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that an accurate API Key Name is returned\", function(){\r",
													"    pm.expect(jsonData.data.name).to.not.empty\r",
													"})\r",
													"pm.test(\"Validate that an Description is returned\", function(){\r",
													"    pm.expect(jsonData.data.description).to.not.empty\r",
													"})\r",
													"pm.test(\"Validate that an accurate webhook is returned\", function(){\r",
													"    pm.expect(jsonData.data.webhook).to.not.empty\r",
													"})\r",
													"pm.test(\"Validate that an accurate timeout is returned\", function(){\r",
													"    pm.expect(jsonData.data.timeout).to.not.eql(null)\r",
													"})"
												],
												"type": "text/javascript",
												"id": "2c32df75-8ee6-442f-9b7f-63904de197bd"
											}
										}
									],
									"id": "852a38e7-6bae-4bcd-8c01-aef4807cf959",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"id": "a10d595e-90c0-483d-bf39-8299841a2877",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "901e6475-13b0-471e-a40a-a4bc0a184265",
											"name": "Reset Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/reset",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														"reset"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "478"
												},
												{
													"key": "ETag",
													"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:29:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Reset Key - No Key_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "4224da96-529f-4b60-9b2b-82e7b130f150"
											}
										}
									],
									"id": "82593bd4-aeab-4108-bbda-02fd40e19863",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"id": "fabf07a7-5955-4cd0-a4a5-60848613187c",
													"key": "key_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "29ed0494-dee0-4e24-9ca8-94fe4210a180",
											"name": "Reset Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/reset",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														"reset"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "478"
												},
												{
													"key": "ETag",
													"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:29:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Reset Key - No 2FA Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "366221a5-18e7-47cc-8275-d681f21ff1e9",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8c5c9b24-c5ad-4c0a-8d28-d4dabe7492fb",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5e0809ee-7482-466c-aa35-55ea6bed62d8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"172454\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "229b6dbf-68e8-4ea0-8abf-d1d830c87f1a",
											"name": "Reset Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/reset",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														"reset"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "478"
												},
												{
													"key": "ETag",
													"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:29:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Reset Key - No Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c77d4f6b-7e19-449b-a696-8cbeee66954b",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9f55c957-2db1-4273-ada1-3d9c16039e6f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "778ec10c-ba67-4535-b2a0-d62cb681a534",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"172\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "1a1a6d0e-e6c3-4354-8828-8db7b55d6b99",
											"name": "Reset Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/reset",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														"reset"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "478"
												},
												{
													"key": "ETag",
													"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:29:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Reset Key - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ea1d97e9-71ac-42f5-b870-e76b73c94aea"
											}
										}
									],
									"id": "9760e939-04fd-4bc0-becb-2f921a6ca35a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"172454\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"id": "05d16a87-c7e5-4d5c-a5b0-0b34eb8edc6b",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reset Key - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "19e80e9e-ca23-4031-a3f1-1096ab5a7faf"
											}
										}
									],
									"id": "4e8edf55-92c1-4148-9ca1-c3c01cbb55fc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/keys/:key_id/reset?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "8b1bc514-55cd-48b3-a117-bb03803c7e9a",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "64f4a072-5b45-4929-bbff-c5f538c3599b"
						},
						{
							"name": "Activate/Deactivate Key",
							"item": [
								{
									"name": "Activate/Deactivate Key - Deactivate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e31977fc-f8a0-47d4-ab7b-a8db9e896b54",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a0896dc4-5871-4a0e-84be-886cea47fa2e",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3c6a661a-1ffc-4c96-a471-cb51e552265e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "6324beef-ac4b-433e-8f62-7b5c802da334",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "1aa697d4-f06d-4fca-b4b9-787f69270f22",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": [
										{
											"id": "d401534d-457d-4c83-b621-b67b23a51ebf",
											"name": "Activate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:30:45 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										},
										{
											"id": "8584df58-7347-40e9-9513-178922dc3384",
											"name": "Deactivate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "deactivate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate/Deactivate Key - deactivated Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "930bef45-17b1-4516-93b5-76680acef75e",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot deactivate an inactive key'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate an inactive key\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d986dc31-ec7a-4b3f-9240-cb062aba4556",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1b6ec2ae-384c-41cb-9297-020018b72a18",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "0e64b5b9-f01f-4013-954a-3b7ec0821522",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "8b4b00fd-8772-4602-854b-bd06f63bb6ee",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": [
										{
											"id": "874d5e11-84cb-4a76-9774-2758fb517231",
											"name": "Activate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:30:45 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										},
										{
											"id": "df58dd0f-9f3a-4b20-9ae5-f12aef3e99d3",
											"name": "Deactivate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "deactivate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate/Deactivate Key - Invalid Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f571005-b24b-4702-96db-82b4edb78244",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'type must be one of the following values: activate, deactivate, approve'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"type must be one of the following values: activate, deactivate, cancel, approve, decline\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "254a71c8-5dc0-42c9-a6f7-376c899a1056",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8649fdbf-3e7c-4367-8b8e-35db43cef8ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"980999\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "54bc5fdc-12fb-47fa-9cd7-c361a02bc03b",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "03cffc34-3c8c-4bc8-817f-4f496ff11d00",
													"key": "type",
													"value": "deac"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Key - Invalid Key_id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1bec7dfb-95f2-4531-9bf2-1247a53b27bc",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "57bcaa91-5416-4d08-b859-e27549fe37f1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d1689773-d282-4f1a-808a-6cd9d075ddcc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "0e19b98a-6358-4a92-9b56-ef11324abdaf",
													"key": "key_id",
													"value": "as"
												},
												{
													"id": "b4d7e154-12a5-4f07-94f5-52679216ed97",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Key - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c73d636a-1a02-4ea3-a89f-f31fa68c8f2a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c6d8afd6-007c-454c-9c67-c701ee172dbd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9a488cbc-1760-4b9f-b4ec-83bbf7aa109b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "7779a26d-848b-4bad-a915-d9d9e4d6af14",
													"key": "key_id",
													"value": "1"
												},
												{
													"id": "2317529e-8c00-414e-a1dd-5c3ffd309f94",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Key - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ba5328b-8c78-4f07-9954-35bacfd934f3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5924492d-e2e0-4151-a325-065ffd622efb",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0bedd37b-bcb9-4514-8992-c4ba993d5291",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1MiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "2d77bfc8-5bb9-4fb8-b897-f8d9ba21101e",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "b8fb6e6d-1a77-41a4-8349-b09ca3d15b77",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate/Deactivate Key - Activate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b5373cb-e618-449c-b684-af3f2e051ab3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "431c8e28-5d20-43c6-b9de-13f0883f7384",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d7e780dc-c8ad-4ea6-b90a-33930ed7ba7d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "dc7489db-b24f-4761-9871-bdd801d85139",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "9d9e93bb-9587-43e5-a222-f7999f1c0692",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "e1e1b102-a1fa-41e2-b38b-f7ce12b20f24",
											"name": "Activate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:30:45 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										},
										{
											"id": "ac78f13a-66ee-475b-adf0-66c9d1e9e5fd",
											"name": "Deactivate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "deactivate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate/Deactivate Key -Activated Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d551b8ec-ea71-4176-a389-52554beb9c24",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot activate an active key'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot activate an active key\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2db4e847-7a31-4aa2-a5b1-a6877d00b6a2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e92e1f1d-0ed7-4023-9d61-e513ebcee545",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"id": "7213bf16-a19c-4f92-bbd0-1213a73adc38",
													"key": "key_id",
													"value": "{{KeyID}}"
												},
												{
													"id": "18f2d06f-e2c0-4e81-9525-2a77a6ba4a7d",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "bf473913-dffb-4ce9-8dd7-3800839d2a11",
											"name": "Activate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:30:45 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										},
										{
											"id": "948158a4-d722-48ba-8a92-2b3246ee520f",
											"name": "Deactivate Key",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id",
														":type"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														},
														{
															"key": "type",
															"value": "deactivate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:11 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								}
							],
							"id": "02181a12-31cb-4fda-91b4-879bd0479b9a"
						},
						{
							"name": "Delete Key",
							"item": [
								{
									"name": "Delete Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "839650dc-2f9e-4bfd-99d6-341b69094c93",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"data is 'null'\", function(){\r",
													"    pm.expect(jsonData.data).to.eql(null)\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0fd340c9-7cf1-4310-9e8d-3a9f337fbffd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "dbb462f8-ee84-4afa-ac55-ebd79641c3b2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "c9972e34-4323-4147-a57f-128689ba2119",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "fe5aeadf-f744-459a-82ff-e3a9f6cccda4",
											"name": "Delete Key",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Delete Key - Already Deleted Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "739ca533-3d0e-4674-8016-09f94d479823",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Key not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e86f91c9-0784-4d90-b60e-8a4aa97b2922",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "549c1a52-4ad2-4fa1-9a4d-d76c85941a2d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "09348492-4bb3-456e-8fdf-bf2587417f58",
													"key": "key_id",
													"value": "{{KeyID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "bf574bb2-d0da-4ecb-994a-1fb963086d84",
											"name": "Delete Key",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/keys/:key_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Mon, 17 Apr 2023 04:31:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Delete Key - Invalid Key_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7452f367-d83f-42d4-b142-c5a183cdcb1c",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2a089518-e6f8-458e-90e7-6c09f0692702",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "fac93710-5743-4d5d-939c-5ea3b47483d3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "238b12e1-389e-475f-8c72-3fff3b552bd7",
													"key": "key_id",
													"value": "re"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Key - Empty Key_ID field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a698202f-ef82-46fc-bef0-79706a9c33a1",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c2518cd2-a8b9-428b-82d9-e3d2a4c43a0d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0be598df-9624-435e-b983-653fb5a9beaa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "b2ac4abf-ae03-4fa3-9481-f14e24ea8a09",
													"key": "key_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Key - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6fb34fc-bbbd-476d-ab52-0d7d029963ab",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ef124c99-b336-4e6d-b47f-9fdf11253fe2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3674d2e8-f757-4640-a237-71a9f1c9e5aa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "bd49114f-d0e0-4f53-b564-fc50d43e73fd",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Key - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c945b0c-60c0-4d00-b978-52520d6bc703",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "feb4d71c-f345-4bc7-8d88-5b602663e834",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f72cbd79-d50a-49ea-8d3a-b2b6cf3b100f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/keys/:key_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"id": "c691651d-cb1a-4af5-b412-a4f17504e5ac",
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "49c46854-1006-42c3-a42b-9ea3337b41e6"
						},
						{
							"name": "Fetch Key Logs",
							"item": [
								{
									"name": "Fetch Key Logs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a4156dc-21ab-4b7c-9637-e6f57d478f7a",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7519694b-6225-4e0a-a8eb-bb5a372eb519",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6ed74c6d-0b5a-4369-a013-61a8a0fc3ce9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/logs"
									},
									"response": []
								},
								{
									"name": "Fetch Key Logs - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dee9277f-5757-421f-92b7-7d23fffd4072",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d1f9781f-094d-4100-a372-f11cfd870739",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f3ffee66-e666-4302-a865-6dfa94d8c3e8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/logs"
									},
									"response": []
								},
								{
									"name": "Fetch Key Logs - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d227afd-4258-4465-98fa-3fa645808bff",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "14828cd7-6a81-474d-8bc2-db31c49891be",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c72744d9-06bb-4ec3-8fe9-4fbba064f550",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzp"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/logs"
									},
									"response": []
								},
								{
									"name": "Fetch Key Logs- Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "934ea306-2fc1-406a-ad49-384475cbd752",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "68d70f0d-c573-4a75-bfe2-885b3b24b9b4",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b51f5dc-1d4d-472a-af75-f88f0cfc6af4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/logs"
									},
									"response": []
								}
							],
							"id": "015f482a-48dc-4284-8835-66f87392c4e8"
						},
						{
							"name": "Fetch Webhook Logs",
							"item": [
								{
									"name": "Fetch Webhook Logs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e84ab357-041e-4cdb-a47b-89afd91dd7d1",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "be5c19e8-1546-4ef2-9e6d-7089981e1c0d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf9d4aa7-6710-4153-a4b6-4a6f4cfeab84",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/webhook-logs"
									},
									"response": []
								},
								{
									"name": "Fetch Webhook Logs - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "689b1d6b-043b-4fac-bca9-cb20bed214a8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "43f60604-0e1b-481f-92b8-e158b982445d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b50ad68-8fe4-48f5-a776-92be304c91b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/webhook-logs"
									},
									"response": []
								},
								{
									"name": "Fetch Webhook Logs - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "213cf15f-5af1-4664-832b-9b313153166a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "af36b65c-0ed7-45c7-b57d-29e35ef719ea",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "79b01125-4a44-479b-b139-96eb5e3ceb77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzp"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/webhook-logs"
									},
									"response": []
								},
								{
									"name": "Fetch Webhook Logs - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69900801-a0f8-410e-adb0-b5664f3b2f7d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5abb1028-6d40-4409-8bd7-a9affbfea538",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "859bf171-cd83-4e05-8857-ca5309c58739",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/keys/webhook-logs"
									},
									"response": []
								}
							],
							"id": "45ca6d01-a4aa-4e35-9d96-fd0b25b31c5c"
						}
					],
					"id": "76c0c1b9-77a6-4b45-a344-20599348fd83"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Create Subscription",
							"item": [
								{
									"name": "Create Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var RequestData = JSON.parse(pm.request.body.raw)",
													"// pm.environment.set(\"subscription_id\", jsonData.data.id)",
													"",
													"// pm.test(\"Status code is 201\", function(){",
													"//     pm.response.to.have.status(201);",
													"// })",
													"// pm.test(\"Status code is Created\", function () {",
													"//     pm.response.to.have.status(\"Created\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is 'Mandate created successfully'\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")",
													"// })",
													"// pm.test(\"Validate that an accurate account number is returned\", function(){",
													"//     pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"// })",
													"// pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"//     pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"// })",
													"// pm.test(\"Validate that an accurate email is returned\", function(){",
													"//     pm.expect(jsonData.data.email).to.contain(RequestData.email)",
													"// })",
													"// pm.test(\"Validate that an accurate amount is returned\", function(){",
													"//     pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"// })",
													"// pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e594953c-19e3-4391-a46b-8b3684c88e5d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "64536fe7-1a29-40de-a1de-6a4b213d2dc3",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1765b5d4-9509-4aa4-b974-56b159dde0f8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "d1dfce51-c934-4510-844f-24b3b786a6fc",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7c4baea9-5961-439b-ab65-b2ab94a2034d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "2c407605-3db5-4ccd-909f-ac8573b3b1a5",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"frequency must be one of the following values: daily, weekly, monthly, yearly\")",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "013b6c6a-c526-4832-87de-ac156c632eb5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"\",\n    \"phone_number\": \"09055755671\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "013c9767-8681-48e7-9123-317fdcf3192b",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription -Invalid frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0bbefb07-004a-4fa9-869d-1ba76ceb52be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "c7871aec-0eae-47e3-b301-8ee04b278ac9",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "36b93817-5bec-49a9-b268-a12fb0ba6dc2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "36a17475-d2eb-4267-84c7-d688c70b01ae",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5ab2d10b-69cd-45c2-9e4e-f42abf7729c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "5d6604fb-be71-4509-8647-84ac549a894f",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - mismatched bank code and account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8be66b24-fa2f-41de-8353-9a2370a663c5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "05978f58-75f2-4308-8881-67dbf1253058",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Non-existing bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e1f9a415-2038-46d3-81fb-dc9ca86dc5f8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f1eb322d-f88c-4a8f-89e8-adf37e2cf28d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7e32ca93-14b4-4f4a-aeb6-3e6ffc91210d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "d00548ed-116a-4df3-a831-b8f5a75f3e10",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bc969bfd-cb49-4525-91d8-8014bfad806d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "2479c811-3fef-4024-8bb5-e7b99e928f45",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a99b3447-bf45-4310-bedc-b0075016ac2b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "58a75fe7-5146-47f0-855f-5fd59845cc0d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - start date in Past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4893104e-a81f-4c79-a4ec-a95b6bc93c3a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "7dd6b772-3dcf-4778-9942-2f4805472ab9",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No end date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "392b192f-9f94-48fd-967c-34f153a95e03",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "30d379e2-8411-4b58-a79d-afd57db04cc7",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date in past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b6d417b1-8c59-4992-a83d-c6842132c44d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f787ec80-a2bc-4596-a83b-8c28be18389e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date greater than start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c5da367e-0914-45ab-82a5-968b5dd7092c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "83dff4c9-6013-4e2e-9e1f-9b592680cfde",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No narration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4e0c9bd0-60dd-4631-bf7a-794c125023ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "9792d42e-96ef-4db5-a168-2f72124ca78e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "36a50ae4-560b-4c77-bf24-72878958fb22",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "c84d7dea-a230-4ca1-86e3-96cd1f495f8b",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8821a74e-14f2-4829-8319-5423d606b6ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "0a2701cf-1dd1-4f14-88fa-a68fcf392702",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - negative amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c0b09a63-b0c7-41a1-b2b3-f3c17f3e8209",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "42c5f79a-2701-49f2-88ab-7523cf986d1f",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Amount lesser than system threshhold",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6582ae1d-195e-4e09-8be1-6d1d55790145",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "e8defa74-d903-41e2-80ec-cbd8a1a2a4dd",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "42244855-842c-4e84-8f0b-b6c3bd8af0d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3435f928-a75c-4dd4-a50c-7075b2836a97",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								}
							],
							"id": "7b805bfe-3bd7-4609-87df-a1bad42c6203"
						},
						{
							"name": "Fetch Subscriptions",
							"item": [
								{
									"name": "Fetch Subscriptions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"const subId = jsonData.data.data[0].id",
													"pm.environment.set(\"subId\", subId)",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0ce76c86-86f6-45a1-bb9e-5dcceb165c6a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=44",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "44"
												}
											]
										}
									},
									"response": [
										{
											"id": "cc9afad3-8b08-4165-914b-d8aa7f9cdb82",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "bdcd2218-8c50-44e5-8c9e-6d7ef3aaddb7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "8b37e4c0-0d7f-4711-a875-5e9922c941a7",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d2c64104-444d-4450-a4e2-9370c13dafdf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "d8aa6dbb-c935-460e-8100-bd0fe94cb550",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "065bf775-35ba-4290-9fcf-6e1ef3cca0fa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "132fd32a-12b0-41a1-8d1d-45d1f130eb69",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "954ca577-fef8-4818-a0e4-80958ea9427c"
						},
						{
							"name": "Fetch Subscription",
							"item": [
								{
									"name": "Fetch Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d5a62b62-2701-497c-97fe-9e97114ce5dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "{{subId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "793ecbd8-457e-4843-9509-52c7783c64d9",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "17d732b5-a27c-418c-8ff7-bcf340a100a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "c229976d-acf3-4e0e-9d3d-74a3194d9273",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "686ef10a-ccea-4dc4-99e5-60bf3e10fb68",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "d955b0d8-7b85-4798-b43f-52eef8d480eb",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "442f5e5c-3315-4d1f-b065-93d7bdefb2c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "22512bb4-3ef8-4530-ae9d-a0385b7bc965",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "97c51d8e-fda0-43df-b0f8-19ca30f5c2bd"
						},
						{
							"name": "Fetch Subscription Stats",
							"item": [
								{
									"name": "Fetch Subscription Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5f44890c-04e7-4b5e-832c-076fa69b3faa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "e3b9f8bf-ab6e-46dc-b639-0a5097d26548",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5400fea0-6e63-468d-96ab-0a67fbbd3dee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "910297c6-ace5-4bc8-8679-d64d574a11c2",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - Invslid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6286999d-9218-4257-acaf-ee6ad38d1132",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "d6a6614a-484c-4779-9a8c-d1756dedc13c",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e703f489-8469-4a13-8505-318b33f0a002",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "8c6a2f86-3275-4c86-a76c-3b22670280e7",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "d1abf57f-c8f5-4e54-b5f1-74a7a8af3697"
						},
						{
							"name": "Activate/Deactivate Subscription",
							"item": [
								{
									"name": "emandate Activate - Activate/Deactivate Subscription",
									"id": "00b678ea-a546-4fdb-a046-4ca1e0b27cb8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "12"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "manual mandate Activate - Activate/Deactivate Subscription",
									"id": "6f3cadac-09fc-488f-8286-a44e79344200",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"signature\": \"iVBORw0KGgoAAAANSUhEUgAAASwAAAEBCAMAAAD1kWivAAADAFBMVEWysrL5nCYYGBj7/+rceo3w1tD+yAfwFTPrIj36////+v/7pwT+/vHWGWOQkZH9twbYWiTcHVTlIERPT0/WIjfkG1T6+vpvcG/8pSfaFTPVqcP//vj9tBTtJDb5uE/XI1bYJEr+9c7z8/Pn5+e2FUj+vBHWHFz9nRL7pRv+vMzY2NfiHkz0023bHFjsmbT5nxz/9v7/ww/2///8qhnq//3SZ3n8567jIEr8yiz8ngXpIUHep7TIyMf8mjK9VHTm4ZjJW2numij5nxnzIDfWHUX62ZL90gPy///zuWflp6b6//n03rf9uCj4GUD9rhXOIWX9oxLznh/z+vD1pB3flyb8pTTtqAPqk5nqphS+HzjmJTvlHkPqG0v0oxDqpiXsHUPHF0LFFlb/9vLjFWX87vj9lkn30N7aipvWGHHonRfNG2H/+vnWDUXeMEP87ObOJFfZFYbRR0TxaT3gV4L90BXZpy/gH1Dz9/vunDX2//nWHFX+sR3onQP8ijjYpRrfwc7u/+fKNl7+vxrrpTfjJDS6T4LsuQHiDUXwxgHfpUjvvX/6+v/EI0T+4AnwOnL1nRLbCFDqlMT+lR/KFnP+nhj7ihfoyRX+jyv3rA7lviby//j/sDTgRzzdmxvZgq3vIi/iE03zrR/gaFHpH0rt7e7lvRjMCVH7nh7/mhf+lhD1sx/yHj/UCGL+miLrFEXELCLx+f3eElL4mh/f3rjw1BzPz8/xF1HpFEndGF7zmBzQFVj0sg7zvQ/eZHLwdCrfFTzqsTm5NEbfJkHc5uT3uRrWEG/03AbRNVP2+//riCHBEDjBD2aAgIDSFUzgJzv5mhb0+vi7urvfKjPnOlbpDGHgPjXGGSMtLC3vlRQ5Nzj39/fRDnyIiIhISEjhMENfX15WVlb9/f3//f/9//////z9/f///fz9//xlZWXd0+P4vvPAwMBAPz9WYmDmkgxbW1vJrHv7lQG7Enp5enrmJUfTl8XmKz3fvdubm5unp6eloZXr0je5xcHf398AAAD///8Hg8WyAAA4qklEQVR4AezQgQAAAAACoP2lX2GAQijlJkuWLFmyZCFLlixZsmQhS5YsWbJkIUuWLFmyZCFrrJIxbuM6EECbTTGD1G7UqdtOGOSfgQhLH2HhToDbIF1638Cn+BdIv+VeQTO0eAzuUE7CkZYGvAs+EjSBPDxFAzUdFjOnJEridCeSYb7frsSvD70rzob0d4TAnzQZFiKzkHPEyKHQFcLmH8+2g3kuMls9bXRw7ommrNv63EX/6rNej7NhLiRDV3pcp3t8nBFxQIUbDEuEFSCQdS8UeKsDOVK9bs/WzroQETCuKnkuEsGHOdTj93xZoZDqeujC57hVaTAsEP4AL1LH6JB10TMhGwMysnCx8awnUZtRVvr1JJmmWpw13gTIRB9950OLYVF+lSvkqpDRqegX6zzpyhCRFBsIQG7GSZeDW/EmPGXO5zddscWw/PI+yAx0QjT7NOCwXC5GB0VYESJrX07K4iObOCgp25u4utofhtPAt+MN9knZjbvdbtpxg2HFLi7fPc7eTbhlGPSYjM75/acZcTqT8Zj5Sze2ZFvUxmpcOV22cWYcJ0fYBkYcFZ1bajCsMAYgQNSbl5og9JoKyAIUR9Uhrr8JyW4UAVNhZI3PIyeBZAgpa6w3d74RD4X078jX5Sc0GNY8duSAD4fD8bhf0/f9vtdfb3REIAo/jqr3+w3ZVozNAxP57nDcxNV707z2z3Ebn/6Mv5hrnf8NL2b1+rfDIQu/UpNhReeIv/+Xedf1sfXI5NvD+n3cOT1829jKIivPm2E53z1fhbLfPx/wm10zCG3bisM4Zi6Wkwim4IyKoqQnuSWoKZ4h2OCR+BmSBkQiTDesVLXTYqbajHouGNfsNo1dDC6NobsJEphd3CzDlyk9pDRgOjrigg+95JS0c247jNJr9n/PbmynzpoMe4nZPj1LcvnnkffL9773ZHfiy5kPdo5rj6/vSIPTnTtw/WziykxHYM3AnvGTS4GXlVVLO7GWiy3jcThhPE8DtgrbplhjWXMLrFdTzpm75oCtbGstZzX8Xnz+7PIROv++ve419Ojeo0Zr0o/4benx85cfh6MdgLVTvet0Ovounf9JtFg4nas1ndIQEi2iiDRNa4U1BeO5+Cwoik3VHCLViHtbedkCq8/qdH4UNdugWtTrxbqGLBa9UtFFMWj7Ovp+509FKC9QQQoUhDY/H3wn92hDQ8wQFjkLhkEaFk3DC668YaQiEVpVI6HAUnj4RicC/pwVb3YuWRAe7L7wrQ4IdO4ArO2pn+/unfkKg+SahDAvTuM49ovmzvscU7/ODJifYJKNWh3pWu2Gnage0jnVkNvtHnQPEi2PgwBUYnw8kQBOTF1CQ7wg0HWpKd+IuhhbWF33rA0PdALWwC7eC12Bv7XeOnpZw5ahbOVmWLDB6NuB8Vi4FqFCGX6iIotiK6yow3HZ+sps0Tm5uVyHSijXETuxd6Dz33HngLLOiXLLwAowzQ8Ojg+OE1YYVk1MgpBiBNxSAo81wqR4FexERwCWtrkY+zO9PvfDN9M7HXHWLjx1ACxOQ62wOE4Gb1Gtzqpu78OimquRjGFxB2FVp6x91gHzgWoO2BUKXAUdhLVdh4XL67QAFojAAlyttIYSrcbiiRieBvF8iqeNEj27cHvpgUu5NV3tLiwNT0TOVm4HC2kU9WFn7VRhK259bbZoB2BpH4TVmIJkFrZ3Vh1VM6wRnq+hAjGlmJpeXQrfdyl/TF/uKKxKW1iUVj6Gs9ARnQWw0N/BAmMdwVlMW2cBKiOVEuBgtnBehU2ufmVtOnqCzuKO4yy9vbP0w2BpR3RW4j1ngVSaB1Z4VRTUrfT6t2czSn9mbfpGd50lH99ZYqecRXH/2Fk8ZkXfhJCnH6fjVy9IfikjwWp46jILdTyzju8sgMUItLq1OLuQjq98qviTkyapOHzj1GWWeOKZNUKcZahbKmaVn3N9LiU9JuysnsksXf73MmuWh7uSStbBrEtRJj0rOe/aKXQWOvnMwgGPYc0G4p7imKL4PffzLvut4XP/9X3WIashzdN0JL3k6Vcm/RnJtPLQ1X9rf+vwf2YxowwAAlK0Smvjpa3Yb6vrV8f8Z/NeScrZ7fni5CnMLHRC+yzGJ/AGsBLAV/ObpVgpEH9wwXs9l89J0ljWnjcBrN53VucyixdS5M6AHRasg+F81jtZrMF6kTV13VkyhiVrGz2QWdhUDDPqg38wYrHUatwDk89rasDqvrPIxdYLz4Y8LTDwFluMjtGB+FVvRvHmTCsElr3rzqoZB0/DjR7YZ/E8w/hGGfIxaSQd98wpiiQVs9muZha1fyCKkzEFytYLmcXzCWBFHggjq/FwVlGuJ5Mrdns3M4tqHDVYqADO6oVnw9T5hA9H+2wkvf4gN6f4J5OeYhdhVVpgFSiqBsvWA/sshk+lEgkDWKXT8VzW7spIyaRnzFWDZe8KLDDLftuHtbHRA59n8TxcDXr2NqyDF+wZr7doMklepeOZNbDraMDCnGpnAotC6I220YHVUD+Ss6I1WG8tHAJRqEB+DTcVdAeD80HireXla8vX6l+F1QWYEupNYXTIUCOwDtoVaSwH7rLbM35vF6ahdRvDKiNENVSHBdPwKJlFFeTDnbX3XmZxctvM2naQztMsqz2xsY3Dx/pCbKj28m1uhsjhC8E5tIDb482F0AIoFIiHH7okWAcJLK//RYdhkf9T+nrvyi9vysCnIQSwqEIBYGnNsKLvnEUMWG8yV4BiRLX5KgychWGBP+rVRIW32FnlgshOvG4qn3I6dqt9Z/7i5XxD20bvOI7JDizXLzZhhw5TrLzyDbfYeKHCKhqLkuLiUIgvXTG2FN3c3pXgNnekVKvLrnS0cKQp8zApGTmylumFbIybm18k18E1Q29aDrpAYeNeDfyn8buxgti7kf2eR3b0J1Lbgb3vIyu+5IGePnye3/MkemS4Z3/9+vVvcYPDJZYf/fHn+PxMqT2sxGJKrB99GEZGAWu6zthgAS0mkHO8b+i1BC7fC1f/7yOwdLNMvXP6AbC8GJbfuquy14NdJ4WlpaUCzhJuroH9XeNwhl0txcuQ+3ez2ezCABXEqFlDhXXmCcDyGrCYaZ0Bmg2dzWLMrN5tlhVtLjcNbKdtZvnQnqN0KVHaKKWPbBsNOW4/6uhbfokU0V46e+P27eyCA6yhm4Vg1XPmyx+YpTqZJTqY5b2WczfLDgubVbea5YujzcqTOD4jRT0h1PaNoM1whYK/4PeHipOTxMTJ24sXf18GOEaqI4QFE7UuDD5jWCLjbpY5ddULV+9qlrU3/CuONQttsewQ46vj4/F420gLRyfUMgVh9BeL7dcEEY+P3d8s12qVh5UKQBpxzYJhiGsWg6JhZjmGwbBUt5rFmFgBrPrbzLJ2F9FsqJtl3QePT3gDZYJ4dxLpkr9EJBKJ1PjE/QtCpFZZr1RqsZHXLGRW3csYgYtTvUxdJN3Mssgiwgiuu5u1a+4NEY0C37VubO9gVpANIym3DH44mZo4eSMrRBrrLCsIR2GNZDa0wsqBWqKouZjFYFcGDfoBLPfZ8ETe3JsRNQbMUgGWxSwA1wFRMIiiKb74YbMkBOUKky2cm18UBI5lb97MZrmRw9JnQ80MS8tpYJY2ozqbZYKFDMwxcPXa+W332ZAxsVUPYXVt/ysdgIVqfKg1SKj12kjLlHbav5FIvY77YQzWylykwbKsRyiPvmbhAs+YAjVYyzEi424WYzWLAbM0N7PueW1m5XRYu0dhEaXEBmwA7BCO6RHpQWu1exsbk6kXXRiDUNurlYbSbCjV6uhrlg5Ls8BSAQBDW2GFDs2qM6aIeoEHWLtuZjFGBsNQBLPsmzZhdBXiMPTazulCQnrzXfb5S/D4h//+5sVqxePJwIpUEBTFBEtBsDKR4cFC62YYhjuaCpdPQhtEIzVGFknrMPTpv+s+f8LkGHNkkFBVmfPyxzazSm1U4AG+pXffrLrVLLQFsUW8IFrFePzADMiI399t9+O/89GLYnx84twmF6kqijKf4cocFzPBUjJZLrJXnV9c+MXDr4YKi6YwrAEtkSE1UhSPwHqdanc6H4R3NM1MStPqonpNE89rAMssykZ6Pw2wgA6jmZqq1eu5v8oA68ACq4MrPNGOxzsmWKFQd9DG/K22Xrp8d+5svLhcXDqZFaoVIMRxCkrMFG4+y1Vra+WF21PsV4WhwgrUZRKHgYZgkZooi7QjrOfbfViy3jQNqpYK40q2wUqU9tOdH3wpa17ESMYndIBVQAzDstcE/akwW6UatDSBk06ne4mNUrxduL+5CGsGYOQQAJjxeDyR5NzChXPFYZtlsCJFEiKiYUg5mfUEscrLeegqoxoki6LqBCtFtBEsDSnbD36jwvyp1nlrzWr7IOipKPyAjHv2YeHuDxVX450JxGqu6XGBtVb1wJ/ik8k3myunD4YI64lhFg6Th1Ne5J3NCvOoB45+8WAWee0orHYigc0iyRxDGk1UAZY3YB+GbSDVf5o10TZyhFUIBwrbxMnNbDmy9rT5Vli15Pcrp8cOhmwW4gOEBqHALF5zMcuApQfMolTeDsvXN0sGQqaIKglwVdFuVj8HxGQK2TVoHSMJGJOhEF69xuMwBoVIrdFQMjGXQB1rVKvf3zw9luoM1SwVYJmjknRe5mlHWM93SNLSm4aLp8As3gYrkWgTCJa1dx5AiYwqi1dtsIBMFxbsxR6xkTCaCVwqVUr70wR+7hrWotm5WoVlFYFzRKXML5STb6pTK7P+XmKYsHYAFmkJrQIsmXYxywqL7sPalr+zm+UES+6bVbfCwuOvW/DBu4MOjsMzcd2u/l1i4txdqO2V9S/YGMByTGbhp2+SD1dmu6ur7aHXLJokBweGRbvC4u2w+P/FLJl2NqsDvxN3PzhzxT1/wCfIlSvnYA0aqbLrn7Ccm1mZBSH55u4sPG246tsfcs0iSQstCsGSnGB9+vwJlCzaBEvGsPhtOyxkVtsOS87T2CwewXJ6KuzBg8BufheOH6PsmvLyJXzj8Z/+/N3WD9eF8ly5yjY8HlezlObTxZXT/tWvO0V/d+hmGSFpYIVgUY5m6TWL7reBWfzbzJKNlkdm5Slx21rg43FisgRPhQW8lhtNJBRPckafe04FYU55fCu8tbxe3dtTms0YhxJzTq02BfNgenW1NzYWGvZsCHxIoyGzaMqtZjH5Q6z0wCzxLWbJdL+R8MJmAayrdlil9MFP8FNhuX688FIhpIqiSRJNauFAYJlNJisVkIoTBIFzWDooewoXaz5E82Ci4/MPCVYXYLUPzjyWKN5sliyjE39kNlxNwAPmMBsCIIgGTYVQsizSFMVvy1ZYxRKB11m0moeestZHy9O0KKsUyV91uX0/bdy+9zInTjByNEpLtHTq1KPpS59//s3Ws7ljF+crjcM0M57D1uCgmCmNSqWWvPGv2bEQ/riK0Fh3lLDQiedlR1ifhhEsCZpGAQCKVmWZh7fyEViJtA6rv1HBCkt2hWXZ6wBnmcYFMhp8JF66dOvVcmVOyM5XlaZSVfQYRikRLrOQqVWVWnNxZXZsrNBGn/MBt4CGDCtqioxOAEtyNOs3O+iacSQsGEj4VrOgtwUWxYu0OyzzLhqghepcHoYjQ9LBoDYD+xkikcxUJsY5ZS3JeaY8a8lk7MLKLBp+LfT7eXd/qLB+dASWhGhF3c3SAwMkCDWI12FFLbD2fQlin8DDkKRN4eF4f7PkILC654UHkL3MpfDft54pc0L5+M2pjJDhBq+I0ZIRlvVEkslFxKoQ8g8+5WOEsPTAt1xqloSvHmMNBoNRug+Lty5KAZZPNytvgSXRNrPcd9F4ESz4AqTyDHkp/OrZ8aQgeDysh4Nk8CsTWTNgRSIeT2NPgDVDCO6V9UqldHoEsHasoGawWdLHTmZ9BmaRFIbFB+FAsCTDLAssZFaUJu2weIqSt7/82TvN8uYQrHt5cTdKR9VbgeV1YJVhPZVmM9OMNfVDMbLW3FPW9o5fgDVDxwf3HHsflXpdBGvoNUsywZIkNBidaxbAokncC/GSZSmKzAqDWQ6wDjAsySyshE2Mbl91gWUxi6bhjZgHgcMzgeVPGrUPMyzL1qoNI01T2KfwMCaqV6E00cEfcpQGWO2h1qwwwJKAUD8Ai5IkF1j/Ce9QJI1Z9RPtmxV0gYW6GwnqZvH8e5gFZZ2EeiUGg9+Er71a/oKtRo7Dtr5qMtIHVYHDoygeaCgZVnlzTFiZDbV+5U9jWL3ewbBhSQiWkagEsKAeSQ+czEIFnsSwZlSVCgQoNBVQYVdYUjRvNUsCsz5zNctas0gG2PHgVWBrWeEi5TL686dwLGmZDdF/lKF6lWNPuQ//efdsCG7qAywIgPq/wAq6D0Mo8DwSSw1AMCwJw/qls1kSXpb1D0mHRQW339MsuJMmA6u/PWtcRMkKWQG+/FoQLgr2lNHrL2fHWl8nXvhDGBMi1e2OEpaeYFR6ELbCIlCBf74TzeeDAEtVX0rXf7ul8ngYbm8HbbMhgWH9DhV4CtBKNPqCh6HdLPeaRcqM91E++I+t//J2trFNnWn6l+U2jN90cIXR+cseDpES2xV44mA2jXeVmYmHmKzJ2k6DrTDBKcFQGWcXExQYxyY0TWaYlEAzTQK4CR2RdlvTtEz/ybLUSdAAVWBoIxZpBqpq+RTnTTMfqm2Fdj6MVt7rPrbJsePsZFd2r+f4UKhk2l+u+z7383o2aoqKrO3t5aTuym5epaRuTZiXhhpjrzp7NGHbuXPR2ApcUinBUsvzNp61RDmL258JijvJqd5DTs2ANcf///xX4NOtW0/uf+/pSW7fJ521nRvPxQCL40Cg5a2cYZgpchZylmp9OQvDrBiV3fbS7z/ZuOX8+fZ2Kxqvcmq8SrupaUrRNAwTHqktXvzZfcnLcoIFxReQt/IEayEJS3UyU0jw+KNARhgu0KEecNaVQIBD35lz3Nl73spUvx4jrtxL3/9sNgNWfDfG4OEsFafk+adjHKC2cQHVjXXVWYhD6Ke3nr7yyzfbz1cWWa33rl+3FiVVXsTDKi8lEStNmGHORGqPHjLu6OrCAYnEisYSCwyLw9PwZFYYxiXJSVZy1t96sZ3h88rK7obRzse3vDFu6wvZOQuw4oB1RaVMcUrBwqNXtZVgrStn8bSamp7+Z9Ouje1W63l82tuLrIQKFynNagaw7BrNdGPP2WL14u4O+XIcooQVzyescWU2LCXvLG5rVs7aHZ+bfz7wm5eQgRS+c58jLipF/aYLj0864Cx6GuZ2Fr4v1dLOOglY68tZSVyfNTV91rRvY+X5XqsVoK63A5aQVcpZoBUO142e3l6hNm620WTHslqO80Pz6izAUmbCotBRKc+tgmWTPL/1N037mzj/uc52gsWaZUzn4wcBTnXj5Je5nDWOU2PAScBrqyrprB+v31lPP2t64an3AGiRp6zXrxcVta92FhRmXeHpM2e2FGN8jGRD6lrIs7MC+D8SNkSOkormLFg7FgDLcUV1Yz+OLqk8f+/evSLPgMft7Lwc8nlvvPDlX3UWNQ6wcjsrV84iWETr6Usv3PC2UCSmYOV2FmCZkLdOnz0q5Q+07ODzfDyfzgIsQajgthW7HQHrQBasDrkt8UfHI6/q/93prGy3ApbVPeBq/mao83KL4sbJVWE4t0zOUmZom1IIa317d57SiNjT997j9m2sQxwSsdw5i0EdYY9Epsd6aosTrVgHgGMHF6T5hRUK7FcKdJK/ITIzYcXnhgHrVYdXuWvT55VWK37A94rcV4MnsKCgs23TuLZk1dNwmZxFXyaExWEbyfpyFolgARXqtKdNr4w/2Fh+3ooEv5azGLvdbjKZRo401h7F4cqghdOK8+4sZbZoY0yAy1zMNixfgLNi+5CvrEU8rW6Pubqn6kOdfeDxlK8ll7N+mfnV4IYEr/zfOAviYW36+T/ceIS8Rb7K7SyIYeysyzUScTefLRa3SvkDiAvnLCGtLGfZhluX4KwDyFf3AAuqrPToMGZySee2dz4OlPw6l7OExoJUHH3zOnKWwFlAhc79Z08/3fDRrhJkeWatp+HMNBOxI2+xYSbyRm0Fhkr586MThXYWJfiWDFjzO3bi0NVX73z5OfIVYqEIt+6Ghx7zQJWo8ZSp8/EXb63DWekwVP1q/c7iWUHv3fr+e74vNtbRwzCns8ZmEIjhMKvXyyKe5tpiOVkLpdZ34axdASEsLDIwShN/DByn5+DF9nLyVrmnWiczD1T3NLrNF15fn7NCSWflhLUJh01u2PC9DT/f0LTh1oamWxtu4YKu3Lqy7dH4Jhza+csbH2y8eK8Ial/trLGx8LQG3jLpWSfGatBPxIiWPD+TrHTAL5UOIaGzDHRxSkPSWbv5cVnqkC7KuyRSY2LPaerOwlh8mi31TGI4d6K+nv0qWtVZa1uUHjwkRV9j+ZAxTmtKCZaBy/hyDs7iAgZVZhhSJl5KPP/DOz+80/Y7gV5frTt3frzFWl4JXN11sJfQWSRkeMrxTlmk8Ugt6q25nV3LeYaFQxmFIlgGKkoxTUnnz6OykwyL48ZW8faL561UEKZh9ZdZIAzAiUQP2T2JQ4dQYXSJl41GzEgnYWm5jO/m6LcBZTYsTMMstR58Hnr1r+pPe9pvllvBqbu7qLdc4Cy+hgcqCJEoM9fXHjW2DnftyCcsLZwVwo89h7PoaYKFnXI1NoBIDsWLt1+8jmwBrTgLKouKiNbkiYq4sc8G28fVS3BWGlaGa+EsJTrSWbCQhQGrdaEVu+Mkm1F6U8PkTB9dc3N0x6ojEiYhOhYrrvdau8vhre5cziKxrMcuq99bW4zzo+fz7SxYCy0tDh+VoSXwIsa7FrCbQW6z7ZAYpeKai1brTeT2tLo9D8tStCYn2IlTt/fAI9gNEe/qiqeche/KEJyVIwwR6fQ3kVrnVrQgEC0EnMPh2dgL1mqs+Etvb1E5U1Ra153lrDQsF+t0RhrfqS1elsbz6yzACqGReGYcseICjhcTcbBSq+mHbFQjBq3kKaJF9iJnTaRgYaGGSCQ7hUmoPoSgumsYzkrD4rJgGeAs72pY8/NzHeSpNV5ckdpUt9QK9clBi2CV15WWZzorHYasy6JD3jqNSIzn21mhEF0pccgz4EelQxyslvkXTyyCFfAQqEp82ot6rWln0dQ5G52c0JlPnajoAytsFsnIWQJYAEUf1QPAytphgUj7/7ux+Ca3pCla8TlsjOmTIhLxLCwCq5zO8ujZKB6JbveJs88n8gUrnoLFhbSpBpNpOdyV2nNwFmJwWUKvUkj6qrQbtC7yNQ5RK9VHo6mFP+StqjIZIhE97s2IxLSzQqHMMNTiJxOIxTKdtUzVEIDNYa37jr+q3cMdC9KKi71F3aVr5Cx9RKZ3VUXNMvc7e8/G8w0rjQoNtALEjEPOSlBuv4/IIlaAhSRR111kBaokLOdEGhYpOBCl5cELRoh23+eGZVBpKWf9IpH1voK0e+aeafMc3kWRvhZX1DGMFTLSir+cKaKR0hzOAizGiRnGIZnbE6xtzbuzVmgZQhSGBIt3FkbRpIfkxTW9sD0liS3doAQJYaXkqh4YoEhMGA8Z13JWiIsZtIFxclbW21HSkSbcQSeQYH+rukMs75OqKct3ZzsrnILljrBYn6vzeI5skecZllYgAx1iSWd4kbMWkNtpq9r2t61F5fzTGs7iadFdkwmrEfPFOmT5PQtG6RrOisFZMUMglu2sHRLsM4BoJ51kpS2v6NmfAaxaahPL540V18/kfhoCViQSZUVDekv9ZJ5gQSvOyoAVACs+Z1HW7VOjZuiF4cn0SVIkgmXJgCXz1AdFExF4S7IY350uHTKdpeWdpfJ+kOEs/NhoO+uyDdvv51ckfPlHihmiE043ysXDw5LWikphUSqssxpGG/R6p9Npqa7OEyyJJD7Hlw4xQ4aztAHc+TAkVIvz4pq3KZmCzgwQIcs/g+XJgnUEYxDkrX9JSO9LNu9IPPePSvrGlcY7K0TOyoSF2ndpKQkrvqLMl4wtkOC+BdpC93LXsEQKb93EM4cp1czMZD4NG9gGYuUswxa6vOQsSis75n8w5dcqMsKQUzgcCsSK3/di18u0nWF7LxI776tn6u6+ibvGI9zhQNzwCwquAWeNUTq8c2fiuX1NvmMK4F9RgJxlyHKWRELbDZcAQyoVOEu4K0wg/iVaCTWe1Il//ktvHWbANHW3b+IuqLOc+oaGMqcufztZ+XnQH0w5tLEMWAqHAnclOWsn1e3b375JZi9faeDGu0vTIIT1rD5lRRd69qgx1zn/3AGv1+EQfjn+shiAxbJy1vISX5dSmpcIZBM0gXagSdDxkasTeCbCWEzpTJ2G4Z0lgNVQEFgKobXwG5y7i6nQA44Xd/yMZ9UNq5cLacFZ9CuctRoWOzkhunYE/cS+vsRzLV5VgNOuKBbQxgx+hOEH2XUWoSIGuD/TnEA5NgIvb1bPSysqbzL4z7s5Eg4LcpZeXzBYMa1ipfkUDi1Hb9RABY9do9uRr/BghrdWC7CiWbBoBIIVifTunj3olP26xKvaJISFECRnab2ZzkJs4TEI7UZqWLdQW2C7D7x1phRBOOL6LpyldcQUQlpghb6h14CclSBflTIMbC6EBHJ4ZMP+llWwKGdFRRP9sq97Khb+/dctcKg2Q45YzA9gmc6i4AMqCSmeW/MrSmV/xO0S+utE6+ZMKWMf4XNWYZ3l1/oznKVwcDgp3Ov1tTj+JN7+fi9SAYJQCAsCrJtwVsPEKmdhJ8hD0LpqRs8HzlIZMp4eMQdAAViWs/i3bOKdh7DKQQn2qtpStZWwCZSmxgenFBXEGXi/dPq7cJYfgHClpNWGAqGQ9+4TH4rSH73dyzBY0VN6UwgLniKnMYAlyoIF8c9FUeeHstO39yBnxRxC2xIoAub9IAOWNI4AHD64hIUJ/wfNFVcyzGhp73eRswALLaXk60W0vrt3fSWvv9H7PgVheGRkplezIsJUSvdw5nYQwWI80aVLQ+7Tt98998THCW0b45+GDgVKh+yNTrvVR19br/6cbn9+7V9fw/3vWaT4m9+FsxCGK87SKvxwlsLLv4qlrnemjknCAp8VEayZNWFBD1nRpYF+9/uftz1wBMi4Ky23s/hdYa9hV9gn+9ZQybl951Y+fKOr5M6dkjsl+9qqSmfGCp+zUmGYaiS+fPDR/GApEwYZzIrXgQ8clWpU0SBHMBr7WrCi/e6qqmuNbhOtGnEIfhQxv5+cNbXKWdioinm2T/4Nx5YJdGP/jVfw4RsufFTJ36luqEgxFef49s6dlsHZy87K0e/KWaQUM5/Cr40pPp5611WkGbEzpVQhw0SaTGfNEEQ7FsRGo9mooCHMjQ1UBevN31z4w7eKkEI7lYpwhRaw/I7YeJazFnfv7JC/+E/f24DTKZMneFFLHQjATyAm1zzz66NTi8iUHPToEdbtK2Pe2TaN1U7OMtkjYFU4Z/ljoRBg0Vu2cMc/+wYHz/12BFmdEKXMJYSFnx9NaY6FLQP9jcRGp6PzQQW7uS2Rfjow9OGHrs62lidg5VMgFfqeKPx86aDICkPMG96fo0lWOod+5ZBAmmNNiyiRsI4X4qcjOWWI8z6K8eeVOg5cPlyOIGQiJhcbicgKGIYEa5BgwVe7HiiOgVUpU/T+9DM6GqHCrClit9fVjY05Bzw4iSkKWEPRYFDQTUzOkIGXaNT9h7tTDgVg7QodO6bAT4aAZcFqTc9I/zQ9JU0LjlZerJYSDyvjCFwDlSPozoa40Mdv2utYJ8NgsUNhYSFGID/+Zr8idPfYLHxVh9W/gJVTI/CaaWSUYWSXBhomRBPXLEOWMkRkds9nEgWXaKTz8YFjZCwKcAKFDzlrHSv/UrCg3KcF0+i+NjkdxXGhA20jjCzMTkdY16izkAnelyqxQgYtxeBxVMOmMWbanpPV2Ng0g0ny6SKZ+RK/T1JEIzVAlF2fYn4M04nshbaWQYUh5lNodwmclcf37pC1QpyjpM2lcc5EpkdHWbZwRamWhwVDY1QZsPYd38IwwGHX5G6a98eQtZjIqGmy+hrRIlMhca2iBWMhEk/ZD7cd8Pu8CrhL6Kz1n62MncgZrKBMZ4U4onWspa2qLmIanY64CghL4Ue+AjJeyFdhTWQaSZ0N23Nq+swYLUf01NacbX44cPWqpay+XhTVrYKF3MUib2El5aXLU0989BgpkLPQ/wSt2LHZNqfGPmqPsIXr7uC/38GzohPo/YhBJjI2Ojat0Zty0sIjBymeOXP71UNHa089dJo9TgvecTMEaFnOQhmGDbrsEVqR5PfRI3G9OWv9zuKF/IF8Ox7ztbS58DxsKGiCR24PGcBqEKx+67LLGIp7E2Q3ZcuOhuFtjbt5zyFjR/GWySORU3Tc0LWJodVJq4yuYE+/mcW6U7/PVxBnaXHxujLODc62VYX7WabQsKi8oiPosXbODlgul0vG8HSyGi6XnnHf3mOk970XbzndHJH1U5K3ZMNKqTrI9jtNl9pajqFjmPecRdImdXJbSEG0NDKP3llYWMjy/pZPjrsYOwtadpeLlUVMOaV3hd0nahIS27CttaP4LB0UClhl/WvA0kWrqvvNJlSnU9oC5SySQ7tLO/WA881eFjH1hXwa+nzkLD9eSTbCjo2awlgNZvofFBltrlFjIdbLaqPRhqP3PDjQUeRBdZoTllM3UV3fcCrc+bjlbqwgOQuoFGh+h2HbuPcYeetZnVWfJ1hzz/qGVGcZtAq8HtcVkd0ejUT0LBaD4QFs0puyLyQs+5nmmoO0wq8LM3g/kxdv+Qr1w4SnsSyaWcGnZDY7RcGeyCnZpTefpJ0Vy7ezFLDWoH+rcnxcMfhtm4xB5zCfzlKL5fxUmB+JN7TJ4KM+jomxj+KvMdFFWARXj0tvlkVGbzebzJ7/qBDLWxcxZbCgFg9LEkfPnnCjPu3EeR1ldNB/VBQUZUZkWf0ESi7X5MYng1P0do5d2z74hTQ/OUsYiPwjHX32A28eZkSuBreTznrtFuflHRYdPKwHoKV84PPNnjsuwv4EgsXzgoSwXKhdnJHR0eZRT3BPsVjOz1vNqcViHPB4tPYdt/PCQIMHY8rUqY4GRZbs+nRCNCliJ/9wwOG76w8oYx/nz1nQytAlwTJMfXxZNPKVSd8PY1XX5QEWaCXD8EEIg5cK6g+6TKwFIZhbTmJnkjnDwTdqxGKxnD+OI74gF2NqUY28ZXKaJ1BAiKITRGb1PMYkej6sq/NxyTGfNkAjpXmts4QTeTS+gVo+bKmyyJzB4JZ8wMIZhveltiSsu77ZwHFWJvOwpjVhOfXNDU6zc/KNH4nlYjoNgGDhzMI+adw4B1pu2UAV9XxEUYyUrsr1yUmfSVl12yzebel99MUPFwrkLAyehZQYDawKeywWvLOotjU/sCStBAsj4xSDLpMsEsH6wrVgyfQNJqcuGqyR29StWF1jkywDFibdMY3Vt0C0cL4QjiwUYb4CXZ9sWEAFXt+ED19uGRz00TLJPOYsLcSlYeHXKYNv9ndVdmd/WcORWmP+YL2Fr/eSryIePAZlUZF+zTh06vSiYI2YVjLO2zB7DlhxbCSw4SBDIw6xPz1wFfkKPZ8J9BNXTyfSSkrWg54PaHnHvwCs/DsLuPgMr+UriAGTTp+n0gGwbAeXE2/dHRy8i9yOUqG5ucEzFNWX5WzNo06c8gVfJZJT7LYULOOCuGt4t8TYWnz2a4vT7HZacCCMbijnDFm0PtiI/Ym/c/hiee4bClhBWr/hUwMqiAmZsyqYnwQ/t2OzHLBmHSWh46zLiSWFPT1VTifI5Lqam3VDYHWQCobUcRwLgEWrTbvEtPyn7+iWdxpRTVmuia7l6Prw/1AWbD7yIYta3vdxYZylSMlwZZvj25bLl0yT9fmq4HlnoY/z7jX7tQm9zOM6XKWXWXIfKdvczFYHa9S04VGdmkPHV0ALeDba5vuwgrq49kRjxPwQWR5sck+RTbp6rupMwcct+esb5oa17YHDMQha0f4t6ryEYYetVZJ4qwSvBXR68FyXeaJBPG3Lcio6FN37Bh+DErWaLEWiFR20iArbVRbnE3MJ/rDVq4CF09nX6CfWV1f1nxo9/PiLwjpLG/Jpt4aOzV4eYGvzAksKZ6HO2nf8mvmhyKnTXbtqlpktUV1ODX3zTbCm774Ex8Jhn7Z6SZrcFIFDaZeRtxCMcvHLmzEGcepDvNZF5/Zc1Q3pUpdQZrMFr1h3Ry78/hdGISxb6sVqP0nqo598lNIrH71CwsHY+9NS0aX6VJVWDBdkoJvXe5cu1EIKg+pX3kezr3e2i/MCS4L197a/+/Hhve/spQu3U/hlTdWI5+9j0x32W5CVIMBalmPfGIFT28QdfRjfqt37+V5oje9552v6FydOf33k3b85mJE+d+Dbnt/35Zf7vjyQav9N2x2zxg1DAQAueHpCs4Z4SsmUyXjt0DHwxmzdwpFN0LVoC3TUP7hfUcgvKF0Od8mcTXryaegcOr4++eq4ufruQnG/p/d0nI1ADx1ZTNyVvOk+dELKjURx0d1cdBIyjvku2XUyff2sF2mWsKvze/H+tPtv8nNTkYly5nmqUeHt5eXliQXvZch0zpPyCI2yH3+8OdvzTqLUf/R09vT0s1nmHRYct8bq6lX/ylNu0zbGSIT54ILW1kluPK80HxbKSUxW8QRa4ri65f+hpwWaRTlnopDqla5sc5KutFbqaLNkQVOjqbXVq+a4W0meEEWWH7h+XOnrjLPyHwGv5ADWLSzRrOywBfBAgZSP4YSodR0FUz7YLHQIRQjUH1vKey7XeRJFSniN7s6185ybxgFXf8daMizQrIQIO5svrtInospbFaOKw4HkeSDaFlqpWM2uMrqTxJfNYs5rtxaNGmPmCVLblJBLzRS7ScY4j9kIKXGBZpXDVHaOaByim+CDw/1ADFEoogPNCoGHM7OBggdUVpUciiQKjcJV8jm/aBYRh+tc7usH/Bv10PeSwWyNsWY7iM9UCFEZqcrwTojelO9MjEGpID3jZf4a7l7WopPmfRvPROQ9+N4DFVFw+TLNNMtwMME8qkYZLnQtWxx360l262mUBZXkCQlOyppkE1wBC7hqBbGAVmDGDBhoT4aMAQO/BG7zAA8BBrRMs9S21roSVj2LsZHCA9XcfmrU3uPCKaW5g/WrvTPGbSRJ1y1Bs3FBR8Ano72UR2swtlbxljAYrxcwuGuYHVybW+AKritjZBEKUJBOlzF6kAZlyJEGj3UeI5ISRZWaJdWwSjJ4GkIjVYzIyJN//BHJyIBI/lrL/Tb99/zwYMn55dXo7rRo/eNypVWziWv6K/qlDgvLwevP0/vR4eV5reRfJ3eD/1WXibp28P9p+wU2+PN/17L/mN7Pb5ccnozu/9+k6l9m9pYSdpPg+78C5PHZ7ObmbIObs5vLzyeDxV/85K/Jr41/Prha/vgcgqh/Or06+7LB7GLQ6a/lt76Wtgmn8V+/bkRW36Dfftfp4bMqhgejsVr4+/LPPzaeGP9TNKdXs41z3pwc/6L+Pe3z7kBWjeGlrMGXP2I4O7yf6F/+Ty+rsbzYF2VJ9Gg0W5Uczs7OZsPh6mh+VDtmpW7CaaaWEf31H4MEy/3Nw8lXVfQcnP7mL+WXsspUa+Lvpw9Fhu3zPTf3na76yi5k/blmXU+XZ1k2a83yYNnKB2EnY7V+v1CnP78u309/WRZYRsNW4mI++L+Tv+rfj8aD+edhr2tSK3mxDzZaylZPZ30Vo8H46C86mSwGo1XU3Az0H//41JLQA37S8UEfwPPBdDGZjK/v5//qC8xOJrqrnPWp4fXytv3tb92ayWT5czQ+nV/2xi6nmvDP5dBZ8DkUDOr1rI+AIxsPNib3/cXcayH52lMDCKvrPh9MXNEnx8nxYWvJ54UEPhEb0MXBcKNIozs+6aXfK+AOZPXUyPrsy5Tri9bKw4kp+Z3fic9JSgrmpH7wYuoGoHp82SrpTOLLFMon79t1H6sSN1jc1n8bDpTQYQVS/He9Eaeq8PSc3eCmiV+Iu5V16VcQUF2MHluJBb8mCXY1Js5ONcQ1gDz0rtnCxJcBvepjoZLgmpDfnRzWi58rsI7p++XvrvSZLII6mPUtz4+XBYlBu1Ft5YlGwOeA8ajexltNhE3nkhK7eqnDqcEXWbm6nPQOnleSktXFX7VDG8XFcBmxYhCwJwUStLtdFhj9FFmKkOj4rCajYhfwKzrszvuYIAXjGhBSiC0GhmP/CKqrOWJK2HRaSCjF7rKG79ius4JetrZnCWAPkArqdHhhup8gC4SSkuhJ7f4TSXwOpXd1bAkIcQ0SSQIeL6NgNlFxE1Rr5N0pIZqAz5wnyGELzxIrtIH8SCiAghUQgaBOJhJ+tCxFEUHiXR27i4HNi4RQO9DwVIIoPgcE9Hq4NI4BXAMFHDVXFdQXjQb0pJ4IbNQTjxRlswyKKgryE2StSXDQ8gXluQb7DjYwgNtI++Ch2uETSqfHLeUFt5BYTGcK9hwNa2DtgF3KInYttubiGkBpSXauEdwGWhPutYXntWSZFC8U3ALFRInkseUHfjRZwipvXYuPgEEvlp0rguRbF+vBMkGXTSlBRy33BNwCqKGh2oqdfEBZCVKvtHMNEhy0QQ6C4BagOB3WLINPSYvNO0nY7iphhY15i/WP1w1Df00jFXmSsc7b7SWA2wGctxERn5A6Ep4rcTspBBM3ZFX4QLJ6qB1xOJGIDcDr5e8WBl/HpAnP5u9mtX+L+Dbu2owUJHw4WZm17mLh0ZVXbRgrvpZ5mz48oUXbgSbiW2hj6I2R4seT1TLqmZK1rDp6j99yZ8fDFkZPYPmodC/B4JtYtCkqdvl43RAX7UoRG2mT1RsRfC0XLdFsxsesU8E3koMa1kTy0WSZ1ulONNgo8aBNvJPXyVa8X7qJa2q4Xvl9eedu9Zj18WSxCqSsc5bdMostJL5e1qQVEcBK9T1QfDutrtkqC/Dw8zFktRTV5GClHwtvOhNfTZNz/0RWN6xD7PdQJu0xaXat0kEUyYeQJeB5S1psDN5C8NWc1K6MD0yXg8YnvwdSO/WS2yMlCSDwQaYO8armqGADT+rhG1s4qDMFBBv3NWV9HyW19UuGt2MroB9EFgVH/TzQnuruXuTNsyOh2Jh/9wMehQ7H5/1S2d2RFfIxZIXSh4U8yT/XYoqvps4/ZhiLjds2nuLbgaQUve51DW/mpws+zDyLrmb0c8GeblafdYD4SohHS1mdkMfgPBX8HhBQT68elnPPr+6mWYcYwnvJoi0yGqxgd1ZlvQXSIqso2Ljsg/O7waCLf3+ePa6jX47GUUIjvIesuJLl98uSFlkxwk5kKaBaTm8PqrDG2WishiSEd5J1XLuhsYJlKWvsm3johgGsfG7d0O8GFCKo3fH97fmqSx5cazC+iyxgtXyNjfZ94LFvgtYNI/Akwf8nAIKEoFoWg1UKOz+W7p26oXn8CslGC4uBb2TavlgJPM5R5/4HBAJKAmKjDD43X7dK8i6yoMbByGBjdVggvpY+7X39EOD3As8OsLG4bcE18f1y1kHNMGJjNUdV4utpZdbUx8v4I1hcVlvFd5Ily+FmrNhILXtTBF8LqwfpNZP2IL1zQB21xU7fQ5Y0OZ1BffJ9SwK+mt73mrOa93DXkEKzdfousoInLWcGe/C8hkkAX8vx828ZbluduwZIWhhfvocssWtRELEnjvpVLHwd6OFzN4OlPVTZsSwSj9vi0ztEVqkfnX0yYAMctyXW8MrIjF2/7rWmfbE/sEji7kBQqaH/DrKS2unmFrCH6OfVmsErSPrXtM7iE6ixdqFG3DltcvMOsvqV+iMBGxC9b78LvoKCpfmOa2jfDR8bwF1Dm8a9gywz6yfba1n03epW8ZvEkua2Mz6h9Fk4BHdNO+HVe8iatwW+iNggRUdtOeoVQPP9fPU+eN0GeMFdg/c/L7Jg/b9Bf0mC2AjQ5kk3iuL2atIyyFmRuIZ+4XU2MSrIljpQGhJk60mF/hlj/vNkBegSp/2LwfiMJvHEbYFBUKCtLgws4BPA6ZfHVaIEX4QEg1ICoSBsSXQ06uhx95NkCYF0eDTr11dfHnDakk/X+TKBCI5nzYmbPpL+uWQkCQS32GJ0bAp0hDIOydY7VJs9nP4sWUEsadc5O7KLz4nWl5WvNR2+CBDi0U3f2zYji1C62hHbOlHB+DKlEE++zI4NET3pF2u33KCW32/8WbJQ0MGwf2EFfA6dk1mzRXyZRHBy1mbTSXCDEs1Ns6Vk+7sWdewtFNK/5Lo9Y7WxevSzZCFoqR3tbGFSwGfQ57NtE2UMjs+a70KRr7YEpBd+F9lia1GNXiFgnM7q3qeJf0Cx4G3NHfDjZBFUEBFW270uO6XicyAeV1snKOrGB0ETPR22KQY9z2zTJ7R+MxQVUVQBRdRBO4kCIpaD1SYn9OnpQLGg8366645lIY8EEMDK6fmXes/dzvSsNvx4PWoBSQgUdHJV/3lq4h9ydL56ywNbUaRHoh5dPLQDXDFqCxMLJRAaJhFUT9qwkR8g6wmADRajtgP3fKq4le6ybaE7VkqQIECJ2s2H9aKOLCm+DLTNUEsuxwqk9w2gOhkNe91PZCVOb9rmvLFqQFjvf5xW+bdK+OH7DSfTwcnBsK3BDfzmKdH7fgPlaXGTxXy2iol0bJldFL1v635XX1cx6pcfJvJEFgUd9We9X/gIao6v+h13pBR3Kmt4cfmEz8ufg/PZl57L02iSgltI9OiqX9+8uht3WMnR4KRfxrtYKLhlEiXo5KR9enZ4P8aeo8FqJfByqjSeGMbFfNhvOj+8Pz6KYHd8129Jn10LKexQ1vWXP2R4M1+owLdkkUTHF8NVwbPzm/Pzs2F/OOw3Dm9bS8cE0PHVYxXLGg4eq7joVQVQbBASPaqh2xiu6A/mRbLrjU7DL1/9N5zNDg7ng4kVAIPboACtz90MXxDe2NpukET16O7geRX9+0QgVsAeGprTk5tnRT7fTwRBdxlZk+l0/IzpUTeJb4cgi8H86nw2XDK7uTg5XcQ3szidX970VZwfjvot6uA2yvh0dHh1frOMx8uru1Zkzc5kbUsjbwWCDSZd16U/At8CqJLSTboSrATBLWBPIFbgR8gyBXlKFDQIbw+sALqRVN4GmM1ZfhB4zV4sVdSgP0QWYJBHVBAJvg1IIIhAECgB3wSlwGPGl6QU5Ntn7o1pIqiya1lghOcBssI3QUUQE+U/qAVFQBAI4Vtl3HgAUYGdymogbB4LouCb2Ri1+J5KNguBaPh2Gak8HLw9svbsXtaevay9rL2svay9rL2sPXtZe1l7WXtZe1l7WXv2svay9rL2svay9rL27GXtZe1l7WXtZe1l7dnL2svay9rL2svay9rz/wEXkgk1zqgIHgAAAABJRU5ErkJggg==\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "13"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate - Activate/Deactivate Subscription",
									"id": "65bd3fdc-724b-472e-a954-e41302e35f2c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - Activate/Deactivate Subscription",
									"id": "ab97c582-4933-4cb6-91fc-c3b0fa1a7fda",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Auth - Activate/Deactivate Subscription",
									"id": "88d473ad-0e3a-496a-b3e7-8e74d874db85",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Expired Auth - Activate/Deactivate Subscription",
									"id": "20c204e5-4b11-48a1-820a-9cec003add93",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "0311ecc6-6a09-48a8-8b86-86093fd3ac9c"
						}
					],
					"id": "21966969-e2df-44f1-a66c-f0431b6c8f57"
				},
				{
					"name": "Transactions",
					"item": [
						{
							"name": "Fetch Transactions",
							"item": [
								{
									"name": "Fetch Transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"transactionID = jsonData.data.data[0].id\r",
													"pm.collectionVariables.set(\"transactionID\", transactionID)\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript",
												"id": "71c38537-bbc9-4223-ae2b-4f36f2a857ca"
											}
										}
									],
									"id": "cce0e627-7b1e-4bb1-b7a3-d0288554e028",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "d91396e7-2874-411a-b2f3-9897a88ad838",
											"name": "Fetch Transactions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions?limit=10&page=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6358"
												},
												{
													"key": "ETag",
													"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 19:57:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transactions - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ca65b72a-46ec-4746-9417-37a0db14b17b"
											}
										}
									],
									"id": "4003b41c-d0cd-42d0-aec5-b782dfd3524c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "9923460c-b02f-4c57-a023-6a96abf6ddf7",
											"name": "Fetch Transactions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions?limit=10&page=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6358"
												},
												{
													"key": "ETag",
													"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 19:57:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transactions - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ee04bee9-5861-48c6-b312-f652cfd8c8b7",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6b0b7e17-1c70-4ad8-870e-98d55d59bdda",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "12a7b8b1-9e9c-4861-95d7-bc2b244cc70c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "9e38dc94-9c5d-42f2-af85-1076ec17c31c",
											"name": "Fetch Transactions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions?limit=10&page=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6358"
												},
												{
													"key": "ETag",
													"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 19:57:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "a410a0f5-96bb-45a2-a80f-ddf670671b52"
						},
						{
							"name": "Fetch Transaction",
							"item": [
								{
									"name": "Fetch Transaction",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript",
												"id": "3fc1fe31-10f5-4376-81ed-f8327ae876a7"
											}
										}
									],
									"id": "ddf642a7-5b7f-4143-8c47-b551d48ad49c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"id": "6d24c5d4-b015-42e0-87d9-11be0b9d15a1",
													"key": "transaction_id",
													"value": "{{transactionID}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "ea1a13ce-372f-4d95-aab0-f9ec56b15ea9",
											"name": "Fetch Transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions/:transaction_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions",
														":transaction_id"
													],
													"variable": [
														{
															"key": "transaction_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "644"
												},
												{
													"key": "ETag",
													"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:00:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction - Invalid ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Transaction not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Transaction not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "7cb1cf80-ab71-46f2-bb3b-a6bc2590a436"
											}
										}
									],
									"id": "2b8b2b8e-f071-4a43-89cc-58f1cce5c6b7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"id": "14f8003c-c0be-45d5-abf6-81b68a89d551",
													"key": "transaction_id",
													"value": "ee"
												}
											]
										}
									},
									"response": [
										{
											"id": "af82d1ec-3227-4369-b1d4-8f1339bc3e90",
											"name": "Fetch Transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions/:transaction_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions",
														":transaction_id"
													],
													"variable": [
														{
															"key": "transaction_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "644"
												},
												{
													"key": "ETag",
													"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:00:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction - No ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Validate that error message is 'Transaction not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Transaction not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "9dae946f-b4d4-4399-902d-f99d1a52d65a"
											}
										}
									],
									"id": "91d228f4-0d14-4d0b-bd14-49a1c6f46505",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"id": "a89359c7-5c18-443d-aeeb-ae3c86bb2a4d",
													"key": "transaction_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "6f7faeb9-fcb4-469d-aa0a-7b7ae1ca1e40",
											"name": "Fetch Transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions/:transaction_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions",
														":transaction_id"
													],
													"variable": [
														{
															"key": "transaction_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "644"
												},
												{
													"key": "ETag",
													"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:00:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "80300fb8-ec87-462d-93c0-e0806426efc3"
											}
										}
									],
									"id": "943560d2-a254-4ada-8780-f47f1773da15",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"id": "acb11cbf-6968-4fd2-8c5c-213c68105705",
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "8d21d87a-8811-4bd7-889d-a5982cceaf8c",
											"name": "Fetch Transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions/:transaction_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions",
														":transaction_id"
													],
													"variable": [
														{
															"key": "transaction_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "644"
												},
												{
													"key": "ETag",
													"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:00:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "a11359a8-baa7-4492-add9-d7023de2c9ed"
											}
										}
									],
									"id": "39fe6ae3-8961-4136-b96c-87848f17ddb9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"id": "9cf19d58-4632-42a1-b8fe-dc4fd1ccacfe",
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "c4cbf8fe-ccaa-4725-a904-8fd236497b15",
											"name": "Fetch Transaction",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/transactions/:transaction_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"transactions",
														":transaction_id"
													],
													"variable": [
														{
															"key": "transaction_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "644"
												},
												{
													"key": "ETag",
													"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:00:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "f7e0b755-7819-484c-af36-5ae39ac52a6d"
						},
						{
							"name": "Fetch Transaction Stats",
							"item": [
								{
									"name": "Fetch Transaction Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ff1b4141-9d71-4dba-a3d6-ebf955d44f81"
											}
										}
									],
									"id": "181f53c8-ba2e-4908-bf0b-f9cb58b8174e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/transactions/stats"
									},
									"response": [
										{
											"id": "7b299843-9a1a-4e07-8d89-3fcf99b658ff",
											"name": "Fetch Transaction Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/transactions/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "115"
												},
												{
													"key": "ETag",
													"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:01:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction Stats - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "40edeaaa-04a2-4fe9-8bdc-be9e11745deb"
											}
										}
									],
									"id": "1657dd0c-86a5-4f83-b3a6-5100c18629a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/transactions/stats"
									},
									"response": [
										{
											"id": "12451490-7c21-423f-865b-b27dac06fc71",
											"name": "Fetch Transaction Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/transactions/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "115"
												},
												{
													"key": "ETag",
													"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:01:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Transaction Stats - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "57f4ae18-4ca4-4f48-bb4a-d17ca0587612"
											}
										}
									],
									"id": "227e4210-3da0-404f-beab-9116d8307845",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/transactions/stats"
									},
									"response": [
										{
											"id": "05d16fb9-1da6-4e04-9595-fdab6625b208",
											"name": "Fetch Transaction Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/transactions/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "115"
												},
												{
													"key": "ETag",
													"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:01:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "80a1c487-f6f8-44dd-bedd-8b3aedb54b13"
						}
					],
					"id": "73320124-b2db-4a9b-8545-37877a500114"
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Fetch Settings Categories",
							"item": [
								{
									"name": "Fetch Settings Categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb3d648c-095a-48a1-a173-46c7fef723b5",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"// pm.test(\"Validate that all categories are present\", function(){\r",
													"//     pm.expect(jsonData.data.data).to.include({\"name\":\"Email Provider\"})\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "92b75223-35ae-4375-963c-c7f92f5344dc",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7929040b-1399-4823-b99f-12c0e2da7cf7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "d67ef8bb-2d34-4f99-b7fd-ea2c8ab0f7c3",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "edbee797-96f3-433a-bd4c-0cbd12eda810"
											}
										}
									],
									"id": "e3ab2182-cee8-4623-bafd-d809810a08f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "257f7663-0ae2-40cc-8942-e01484b9ccb6",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8980496d-1f85-4d8a-987b-60754cf51e28",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "378d7a26-dbe4-4242-bb73-fd83e15918f1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7bbeaae9-5408-4692-bb76-bf188d572168",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjQ3NzY5LCJleHAiOjE2ODQyNTEzNjl9.Hdt1k6cWyKZOBNDAHy9R9stTWLEIeELHvx2ahfdrQV4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "ea2a0a66-6489-4b1d-836e-0d809fe1ba9a",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "873ffdfd-4e1b-47ff-8763-3377ab0f8cdf"
						},
						{
							"name": "Fetch Settings",
							"item": [
								{
									"name": "Fetch Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043fd8c8-4a5c-4555-b01b-fc4e81c9b2e0",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"// pm.test(\"Validate that all categories are present\", function(){\r",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2d80c3e7-7f12-4bcd-bb18-d1b584c831ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "8da8f4cd-4952-4db5-8161-9c770e078a65",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0348e5ff-c214-495f-90ee-67521c35b61a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "453b796c-dbb0-42c0-81a9-081583420a15",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "55b15baf-ad0a-4baf-a783-098925fdab18",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "e74e60b2-9947-4655-a1c2-253d7eb14d89",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - Expired authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efa1f288-5b8b-4702-b437-09888d4946a3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ebfb0b03-e827-4c80-86f6-9c08e12e4aa7",
												"exec": [
													"postman.setNextRequest(\"Logout - Invalid/expired Token\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b016873f-9643-4005-b426-68c2f5e734cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "8414f805-3dc0-4b06-9bda-6532e837075f",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "443182fe-753e-4bab-86e7-9f34404bd42f"
						},
						{
							"name": "Update Settings",
							"item": [
								{
									"name": "Update Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5f939fbf-930b-4411-b0c8-c370cefdb374",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Status code is 201\", function(){\r",
													"//     pm.response.to.have.status(201);\r",
													"// })\r",
													"// pm.test(\"Status code is Created\", function () {\r",
													"//     pm.response.to.have.status(\"Created\");\r",
													"// });\r",
													"// pm.test(\"Status is Success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is 'Settings updated successfully'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Settings updated successfully\")\r",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "13108f7d-f30e-410d-b1bd-729684e3e307",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"key": "settings_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "e46e7934-f6ba-41c1-9187-ec84578e6e19",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is 'Bad Request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Value cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "afa539ab-8174-4b05-b258-e3f5d65a99c1"
											}
										}
									],
									"id": "0e096fba-fc2b-4dbe-8310-428e6e561a70",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "40025d61-104d-4686-9acf-a35bf4b53be0",
													"key": "settings_id",
													"value": "12"
												}
											]
										}
									},
									"response": [
										{
											"id": "c91ab523-6fc0-423d-a454-5fe2962d872e",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "246a13e5-077f-4552-bebb-c81b29d04dd4"
											}
										}
									],
									"id": "0230f137-7ebd-4812-b9a8-9d6d473e4f9a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "faa15e40-ab22-42b4-9486-4fcf0ee1b29c",
													"key": "settings_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "0f87ef00-5cc6-4916-b607-c2cc7d6d7195",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Invalid Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "66594507-f6d7-4b32-99eb-828d9f6a2a65"
											}
										}
									],
									"id": "5cdee36f-c5f0-4cfa-8bf5-0c2fbd78952b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "6b12432b-8911-4104-b95d-cbbeb05ea3c6",
													"key": "settings_id",
													"value": "er"
												}
											]
										}
									},
									"response": [
										{
											"id": "2286f44c-5c01-4924-b56e-9b855de77d6a",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "ffeec313-143e-4c31-8268-daab4b57de80"
						},
						{
							"name": "Fetch Web Settings",
							"item": [
								{
									"name": "Fetch Web Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78ef2fd5-3b0c-4228-8dbf-a49cda305116",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"// pm.test(\"Validate that all categories are present\", function(){",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0a0b8863-d5b6-4ed7-a95e-a32d63b957bf",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "88821e85-2213-454c-aaac-87bb467377ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/web"
									},
									"response": [
										{
											"id": "f0f6f8b2-f213-4e12-bd25-252c84e24c77",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63149c86-97b3-4df0-babe-23fb76209f6f",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"// pm.test(\"Validate that all categories are present\", function(){",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "114d1e13-d30b-4153-941e-52b81dcc433a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9a67c252-d739-48ae-8990-52d1d46cfd01",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/web"
									},
									"response": [
										{
											"id": "8bf7f4dc-20b2-4d8a-9c6d-ab3445dde6b2",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3dd98730-7226-493c-af22-c03df50f8be5",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"// pm.test(\"Validate that all categories are present\", function(){",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5a183273-1a47-4fb9-a377-6f09e3ac2085",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e79b855f-982c-44c8-946f-ed6626bf7617",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSy",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/web"
									},
									"response": [
										{
											"id": "3cc66f56-e342-43b3-93d9-bbd124c0c539",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab01d868-f6ad-437d-b4b2-3d3e51278d1b",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"// pm.test(\"Validate that all categories are present\", function(){",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c902cfb-6f3e-422b-892e-d1bfb4555157",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1c1305df-4a1d-4ee9-b35f-3d28e23b06e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/web"
									},
									"response": [
										{
											"id": "5a6b032d-67c1-4757-aaab-c95244f86907",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "af95dfb8-a8ee-4264-8d93-2fb833b89db6"
						}
					],
					"id": "1bea46be-1449-466e-9d07-cb79f9150002"
				},
				{
					"name": "Billers",
					"item": [
						{
							"name": "Fetch All Billers",
							"item": [
								{
									"name": "Fetch All Billers",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"const fetchedBiller = jsonData.data.data[0].id",
													"pm.environment.set(\"fetchedBiller\", fetchedBiller)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"",
													"pm.test(\"Status is success\", function () {",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function () {",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"The right data type for Billers Name, Billers ID, rc and email is returned\", function () {",
													"    const Data = jsonData.data.data;",
													"    Data.forEach(function (biller) {",
													"        pm.expect(biller.id).to.be.a('number');",
													"        pm.expect(biller.name).to.be.a('string');",
													"        pm.expect(biller.rc_number).to.be.a('string');",
													"        pm.expect(biller.email).to.be.a('string')",
													"        pm.expect(biller.code).to.be.a('string');",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2534a59f-5d99-43a0-b4db-51f584aa9f16",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/billers"
									},
									"response": []
								},
								{
									"name": "Fetch All Billers - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bbefac03-ecee-4a89-af0f-a0c1786679af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/billers"
									},
									"response": []
								},
								{
									"name": "Fetch All Billers - Invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "395ebcb4-cc93-4c5f-83f0-9a3812bce699",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1i"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/billers"
									},
									"response": []
								},
								{
									"name": "Fetch All Billers - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3e5f34bc-6609-4681-b119-366fe3e19732",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/billers"
									},
									"response": []
								}
							],
							"id": "37ed0258-28cd-4882-8917-db0f96138971"
						},
						{
							"name": "Fetch Biller",
							"item": [
								{
									"name": "Fetch Biller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5de178c0-9753-4881-b609-b21eb6564354",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9745b6d4-887b-4c16-bf11-6f71aa15bf56",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"key": "biller_id",
													"value": "{{fetchedBiller}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Biller - Invalid Biller ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5de178c0-9753-4881-b609-b21eb6564354",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e537fe6d-5c27-481c-811e-3114929e5761",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"id": "97771218-0c25-439b-8aa3-eadba9be598d",
													"key": "biller_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Biller - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5de178c0-9753-4881-b609-b21eb6564354",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c8b97dc7-2e61-4548-afcf-a878cca20f72",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"id": "97771218-0c25-439b-8aa3-eadba9be598d",
													"key": "biller_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Biller - Invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5de178c0-9753-4881-b609-b21eb6564354",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8dbfe1fa-5e18-489c-9946-1dbcd948e25f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"id": "97771218-0c25-439b-8aa3-eadba9be598d",
													"key": "biller_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "73d3eb2d-f9b3-433c-b82f-c9c6e97ba6ea"
						},
						{
							"name": "Update Biller",
							"item": [
								{
									"name": "Update Biller",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cbf75f57-4b7a-44df-b76e-29c4feab70a8",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 201\", function(){",
													"    pm.response.to.have.status(201);",
													"})",
													"pm.test(\"Status code is Created\", function () {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate message is 'Beneficiary created successfully'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Beneficiary created successfully\")",
													"})",
													"pm.test(\"Validate that an accurate account number is returned\", function(){",
													"    pm.expect(jsonData.data.account_number.toString()).to.contain(RequestData.account_number)",
													"})",
													"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"    pm.expect(jsonData.data.bank_id.toString()).to.contain(RequestData.bank_id)",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0a6d3e76-0c7a-4d38-893e-2bb7df0095ef",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "fe48cca5-9d77-4cd2-8389-7cfa47fba39e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Azeez\",\n    \"account_number\": \"2265006649\",\n    \"bank_id\": 40\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"key": "biller_id",
													"value": "{{fetchedBiller}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "2220e2cb-172d-4204-8f51-de714551919c"
						},
						{
							"name": "Fetch Biller Settlement",
							"item": [
								{
									"name": "Fetch Biller Settlement",
									"id": "cd1e5764-9aa8-4ff8-bea3-e8b3478d1049",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id/settlement",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id",
												"settlement"
											],
											"variable": [
												{
													"key": "biller_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "8631f0fa-dadb-476f-b269-349970d48740"
						},
						{
							"name": "Update Biller Settlement",
							"item": [
								{
									"name": "Update Biller Settlement",
									"id": "692dca10-a164-4e73-b3ac-2016ab6f8dc2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/billers/:biller_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"billers",
												":biller_id"
											],
											"variable": [
												{
													"key": "biller_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "ab619795-6bdd-43cd-b33a-57a3588cdb2e"
						}
					],
					"id": "0bceabd7-d6eb-4970-97aa-ae9aae5844f1"
				},
				{
					"name": "Logout",
					"item": [
						{
							"name": "Logout - Invalid/expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Invalid Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"id": "4e898905-f519-42eb-9cb1-defe86683d76"
									}
								}
							],
							"id": "402c9e34-86f5-47e8-94ed-f3ee98b2a02b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ1MzU0LCJleHAiOjE2ODM2NDg5NTR9.b1pE85sjyVbCkh4plM_NwyYLucErCRB2ExcL4PlVB7E",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/logout"
							},
							"response": []
						},
						{
							"name": "Logout -No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"id": "47bc7945-7e38-4ab0-8ecd-ea28bdb7873e"
									}
								}
							],
							"id": "398e3800-920d-493a-9220-341a2cd7099a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/logout"
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Logout successful'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Logout successful\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "108b557f-b87f-49db-935d-d1251b5d7417"
									}
								}
							],
							"id": "a2d0059b-e2d9-4ad9-b3d9-3688ce3c2fd8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/logout"
							},
							"response": []
						}
					],
					"id": "5a4bc331-69ac-4a45-af86-6d5668c95896"
				}
			],
			"id": "0f2eb104-c397-4ae9-b509-d1bd0370d934"
		}
	],
	"variable": [
		{
			"key": "TOKEN",
			"value": ""
		},
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "StartDate",
			"value": ""
		},
		{
			"key": "FutureDate",
			"value": ""
		}
	]
}